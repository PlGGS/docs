[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/index.js",
    "content": "/**\r\n * \r\n * @private\r\n */\r\nconst qEditSymb = 2001;\r\n/**\r\n * \r\n * @private\r\n */\r\nconst qEditDate = 2002;\r\n/**\r\n * \r\n * @private\r\n */\r\nconst littleEndian = true;\r\n\r\n/**\r\n * A built-in JavaScript {@link Object} that only contains member variables with corresponding {@link number}(s)\r\n * @typedef {Object} enumeration\r\n */\r\n/**\r\n * A built-in JavaScript {@link Object} that provides a way to represent whole numbers larger than 2^53-1\r\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt\r\n * @typedef {Object} BigInt\r\n */\r\n\r\n/**\r\n * Class used for referencing all v9 event enumerations and data\r\n */\r\nexport class v9\r\n{\r\n  constructor()\r\n  {\r\n    /**\r\n     * Value used specify a non-existent 32 bit price returned\r\n     * @private\r\n     */\r\n    this.PRICE_NULL_32 = 2147483647;\r\n\r\n    /**\r\n     * Value used specify a non-existent 64 bit price returned\r\n     * @private\r\n     */\r\n    this.PRICE_NULL_64 = 9223372036854775807;\r\n\r\n    /**\r\n     * @ignore\r\n     * @private\r\n     */\r\n    this.sGroupSettleID = 4294967293;\r\n\r\n    /**\r\n     * @typedef {enumeration} UnionID\r\n     * @property {number} NotSet 255\r\n     * @property {number} NotMapped 250\r\n     * @property {number} TradeSummary 0 : Message that contains summary information about trades\r\n     * @property {number} TradeMatch 1 : Message that contains information on a match of a trade event\r\n     * @property {number} VolumeUpdate 2 : Message that updates volume data after a TradeSummary event. On certain exchanges if two implied quotes are matched, a VolumeUpdate event will occur showing the change in the total volume, but it will not be tied to a TradeSummary event\r\n     * @property {number} BookLevel 3 : Message that contains information on a quote that occurred in the first n levels of the book. The instrument definition from the exchange specifies the exact number of levels. This message can show up alongside an OD message\r\n     * @property {number} OrderBook 4 : Message that contains information on a quote for all price levels\r\n     * @property {number} SecurityStatus 5 : Message that provides the security group market state change\r\n     * @property {number} DailyStatistics 6 : Message that provides information about a complete session\r\n     * @property {number} SessionStatistics 7 : Message that provides information about the session during the session\r\n     * @property {number} LimitsBanding 8 : Message that provides the daily limits for the current session\r\n     * @property {number} ChannelReset 9 : Message that indicates if the channel the contract is on was reset and at what time\r\n     * @property {number} TransactionMarker 10 : The TS message marks the start of a bundle, and the TE message marks the end of that bundle. The exchange considers all the messages between the start and end marker to have been processed together, regardless of how the packets were split during exchange transmission\r\n     */\r\n\r\n    /**\r\n     * A {@link v9}․{@link UnionID} {@link enumeration} that contains each of the different values that may be returned from:</br>\r\n     *  - v9.UnionID\r\n     * @type {enumeration}\r\n     * @example\r\n     * onEvent(pSymbol, pEvent, pRealTime) {\r\n     *     switch (pEvent.header.unionID) {\r\n     *         case v9.UnionID.<Value>:\r\n     *             // Do something when pEvent.header.unionID is equal to v9.UnionID.<Value>\r\n     *             break;\r\n     *         default :\r\n     *             break;\r\n     *     }\r\n     * }\r\n     */\r\n    this.UnionID = {\r\n      NotSet: 255,\r\n      NotMapped: 250,\r\n      TradeSummary: 0,\r\n      TradeMatch: 1,\r\n      VolumeUpdate: 2,\r\n      BookLevel: 3,\r\n      OrderBook: 4,\r\n      SecurityStatus: 5,\r\n      DailyStatistics: 6,\r\n      SessionStatistics: 7,\r\n      LimitsBanding: 8,\r\n      ChannelReset: 9,\r\n      TransactionMarker: 10,\r\n      Test: 11, //Deprecated\r\n      ClearingPrice: 12 // FUTURE\r\n    };\r\n\r\n    /**\r\n     * @typedef {enumeration} Aggressor\r\n     * @property {number} NoAggressor 0\r\n     * @property {number} Buy 1\r\n     * @property {number} Sell 2\r\n     */\r\n    /**\r\n     * A {@link v9}․{@link Aggressor} {@link enumeration} that contains each of the different values that may be returned from:</br>\r\n     *  - pEvent.tradeSummary.aggressor\r\n     * @type {Aggressor}\r\n     * @example\r\n     * onEvent(pSymbol, pEvent, pRealTime) {\r\n     *     switch (pEvent.header.unionID) {\r\n     *    case v9.UnionID.TradeSummary:\r\n     *                  var agr = pEvent.tradeSummary.aggressor;\r\n     *              break;\r\n     *          default :\r\n     *              break;\r\n     *     }\r\n     * }\r\n     */\r\n    this.Aggressor = {\r\n      NoAggressor: 0,\r\n      Buy: 1,\r\n      Sell: 2\r\n    };\r\n\r\n    /**\r\n     * @typedef {enumeration} HaltReason\r\n     * @property {number} NotSet 255\r\n     * @property {number} GroupSchedule 0\r\n     * @property {number} SurveillanceIntervention 1\r\n     * @property {number} MarketEvent 2\r\n     * @property {number} InstrumentActivation 3\r\n     * @property {number} InstrumentExpiration 4\r\n     * @property {number} Unknown 5\r\n     * @property {number} RecoveryInProcess 6\r\n     */\r\n    /**\r\n     * A {@link v9}․{@link HaltReason} {@link enumeration} that contains each of the different values that may be returned from:</br>\r\n     *  - pEvent.securityStatus.haltReason\r\n     * @type {HaltReason}\r\n     * @example\r\n     * onEvent(pSymbol, pEvent, pRealTime) {\r\n     *     switch (pEvent.header.unionID) {\r\n     *         case v9.UnionID.SecurityStatus:\r\n     *             var hlt = pEvent.securityStatus.haltReason;\r\n     *             break;\r\n     *         default :\r\n     *             break;\r\n     *     }\r\n     * }\r\n     */\r\n    this.HaltReason = {\r\n      NotSet: 255,\r\n      GroupSchedule: 0,\r\n      SurveillanceIntervention: 1,\r\n      MarketEvent: 2,\r\n      InstrumentActivation: 3,\r\n      InstrumentExpiration: 4,\r\n      Unknown: 5,\r\n      RecoveryInProcess: 6\r\n    };\r\n\r\n    /**\r\n     * @typedef {enumeration} SecurityType\r\n     * @property {number} NotSet 0\r\n     * @property {number} TradingHalt 2\r\n     * @property {number} Close 4\r\n     * @property {number} NewPriceIndication 15\r\n     * @property {number} ReadyToTrade 17\r\n     * @property {number} NotAvailableForTrading 18\r\n     * @property {number} UnknownorInvalid 20\r\n     * @property {number} PreOpen 21\r\n     * @property {number} PreCross 24\r\n     * @property {number} PostClose 26\r\n     * @property {number} NoChange 103\r\n     * @property {number} PreClose 150 : Only ICE Exchange\r\n     * @property {number} Restricted 200 : Only EUREX Exchange\r\n     * @property {number} Freeze 201 : Only EUREX Exchange\r\n     */\r\n    /**\r\n     * A {@link v9}․{@link SecurityType} {@link enumeration} that contains each of the different values that may be returned from:</br>\r\n     *  - pEvent.securityStatus.type\r\n     * @type {SecurityType}\r\n     * @example\r\n     * onEvent(pSymbol, pEvent, pRealTime) {\r\n     *     switch (pEvent.header.unionID) {\r\n     *         case v9.UnionID.SecurityStatus:\r\n     *             var typ = pEvent.securityStatus.type;\r\n     *             break;\r\n     *         default :\r\n     *             break;\r\n     *     }\r\n     * }\r\n     */\r\n    this.SecurityType = {\r\n      NotSet: 0,\r\n      TradingHalt: 2,\r\n      Close: 4,\r\n      NewPriceIndication: 15,\r\n      ReadyToTrade: 17,\r\n      NotAvailableForTrading: 18,\r\n      UnknownorInvalid: 20,\r\n      PreOpen: 21,\r\n      PreCross: 24,\r\n      Cross: 25,\r\n      PostClose: 26,\r\n      NoChange: 103,\r\n      PreClose: 150,\r\n      Restricted: 200,\r\n      Freeze: 201\r\n    };\r\n\r\n    /**\r\n     * @typedef {enumeration} SecurityEvent\r\n     * @property {number} NoEvent 0\r\n     * @property {number} NoCancel 1\r\n     * @property {number} ResetStatistics 4\r\n     * @property {number} ImpliedMatchingON 5\r\n     * @property {number} ImpliedMatchingOFF 6\r\n     */\r\n    /**\r\n     * A {@link v9}․{@link SecurityEvent} {@link enumeration} that contains each of the different values that may be returned from:</br>\r\n     *  - pEvent.securityStatus.securityEvent\r\n     * @type {SecurityEvent}\r\n     * @example\r\n     * onEvent(pSymbol, pEvent, pRealTime) {\r\n     *     switch (pEvent.header.unionID) {\r\n     *    case v9.UnionID.SecurityStatus:\r\n     *                  var sev = pEvent.securityStatus.securityEvent;\r\n     *              break;\r\n     *          default :\r\n     *              break;\r\n     *     }\r\n     * }\r\n     */\r\n    this.SecurityEvent = {\r\n      NoEvent: 0,\r\n      NoCancel: 1,\r\n      ResetStatistics: 4,\r\n      ImpliedMatchingON: 5,\r\n      ImpliedMatchingOFF: 6\r\n    };\r\n\r\n    /**\r\n     * @typedef {enumeration} BookType\r\n     * @property {number} NotSet 85\r\n     * @property {number} Bid 66\r\n     * @property {number} Ask 83\r\n     * @property {number} ImpliedBid 98\r\n     * @property {number} ImpliedAsk 115\r\n     * @property {number} BookReset 82\r\n     */\r\n    /**\r\n     * A {@link v9}․{@link BookType} {@link enumeration} that contains each of the different values that may be returned from:</br>\r\n     *  - pEvent.orderBook.type\r\n     *  - pEvent.bookLevel.type\r\n     * @type {BookType}\r\n     * @example\r\n     * onEvent(pSymbol, pEvent, pRealTime) {\r\n     *     switch (pEvent.header.unionID) {\r\n     *    case v9.UnionID.OrderBook:\r\n     *                  var typ = pEvent.orderBook.type;\r\n     *              break;\r\n     *          default :\r\n     *              break;\r\n     *     }\r\n     * }\r\n     */\r\n    this.BookType = {\r\n      NotSet: 85,\r\n      Bid: 66,\r\n      Ask: 83,\r\n      ImpliedBid: 98,\r\n      ImpliedAsk: 115,\r\n      BookReset: 82\r\n    };\r\n\r\n    /**\r\n     * @typedef {enumeration} DailyStatisticsType\r\n     * @property {number} SettlePrice '6'\r\n     * @property {number} ClearedVolume 'B'\r\n     * @property {number} OpenInterest 'C'\r\n     * @property {number} Fixing 'W'\r\n     */\r\n    /**\r\n     * A {@link v9}․{@link DailyStatisticsType} {@link enumeration} that contains each of the different values that may be returned from:</br>\r\n     *  - pEvent.dailyStatistics.type\r\n     * @type {DailyStatisticsType}\r\n     * @example\r\n     * onEvent(pSymbol, pEvent, pRealTime) {\r\n     *     switch (pEvent.header.unionID) {\r\n     *    case v9.UnionID.DailyStatistics:\r\n     *                  var typ = pEvent.dailyStatistics.type;\r\n     *              break;\r\n     *          default :\r\n     *              break;\r\n     *     }\r\n     * }\r\n     */\r\n    this.DailyStatisticsType = {\r\n      SettlementPrice: 54,\r\n      ClearedVolume: 66,\r\n      OpenInterest: 67,\r\n      FixingPrice: 87\r\n    };\r\n\r\n    /**\r\n     * @typedef {enumeration} BookAction\r\n     * @property {number} NotSet 255\r\n     * @property {number} New 0\r\n     * @property {number} Change 1\r\n     * @property {number} Delete 2\r\n     * @property {number} DeleteThru 3\r\n     * @property {number} DeleteFrom 4\r\n     * @property {number} Overlay 5\r\n     * @property {number} Replace 6\r\n     */\r\n    /**\r\n     * A {@link v9}․{@link BookAction} {@link enumeration} that contains each of the different values that may be returned from:</br>\r\n     *  - pEvent.orderBook.action\r\n     *  - pEvent.bookLevel.action\r\n     * @type {BookAction}\r\n     * @example\r\n     * onEvent(pSymbol, pEvent, pRealTime) {\r\n     *     switch (pEvent.header.unionID) {\r\n     *    case v9.UnionID.OrderBook:\r\n     *                  var act = pEvent.orderBook.action;\r\n     *              break;\r\n     *          default :\r\n     *              break;\r\n     *     }\r\n     * }\r\n     */\r\n    this.BookAction = {\r\n      NotSet: 255,\r\n      New: 0,\r\n      Change: 1,\r\n      Delete: 2,\r\n      DeleteThru: 3,\r\n      DeleteFrom: 4,\r\n      Overlay: 5,\r\n      Replace: 6\r\n    };\r\n\r\n    /**\r\n     * @typedef {enumeration} SessionStatisticsType\r\n     * @property {number} NotSet 127\r\n     * @property {number} OpenPrice 0\r\n     * @property {number} HighTrade 1\r\n     * @property {number} LowTrade 2\r\n     * @property {number} LastTrade 3\r\n     * @property {number} HighestBid 4\r\n     * @property {number} LowestAsk 5\r\n     * @property {number} ClosePrice 6\r\n     */\r\n    /**\r\n     * A {@link v9}․{@link SessionStatisticsType} {@link enumeration} that contains each of the different values that may be returned from:</br>\r\n     *  - pEvent.sessionStatistics.type\r\n     * @type {SessionStatisticsType}\r\n     * @example\r\n     * onEvent(pSymbol, pEvent, pRealTime) {\r\n     *     switch (pEvent.header.unionID) {\r\n     *         case v9.UnionID.SessionStatistics:\r\n     *                  var typ = pEvent.sessionStatistics.type;\r\n     *              break;\r\n     *          default :\r\n     *              break;\r\n     *     }\r\n     * }\r\n     */\r\n    this.SessionStatisticsType = {\r\n      NotSet: 127,\r\n      OpenPrice: 0,\r\n      HighTrade: 1,\r\n      LowTrade: 2,\r\n      LastTrade: 3,\r\n      HighestBid: 4,\r\n      LowestAsk: 5,\r\n      ClosePrice: 6\r\n    };\r\n\r\n    /**\r\n     * @typedef {enumeration} StateType\r\n     * @property {number} NotSet 255\r\n     * @property {number} DailyOpenPrice 0\r\n     * @property {number} IndicativeOpeningPrice 5\r\n     * @property {number} DailyClosingPrice 10\r\n     */\r\n    /**\r\n     * A {@link v9}․{@link StateType} {@link enumeration} that contains each of the different values that may be returned from:</br>\r\n     *  - pEvent.sessionStatistics.stateType\r\n     * @type {StateType}\r\n     * @example\r\n     * onEvent(pSymbol, pEvent, pRealTime) {\r\n     *     switch (pEvent.header.unionID) {\r\n     *    case v9.UnionID.SessionStatistics:\r\n     *                  var stt = pEvent.sessionStatistics.stateType;\r\n     *              break;\r\n     *          default :\r\n     *              break;\r\n     *     }\r\n     * }\r\n     */\r\n    this.StateType = {\r\n      NotSet: 255,\r\n      DailyOpenPrice: 0,\r\n      IndicativeOpeningPrice: 5,\r\n      DailyClosePrice: 10\r\n    };\r\n\r\n    /**\r\n     * @typedef {enumeration} PutOrCall\r\n     * @property {number} NotSet 255\r\n     * @property {number} Put 0\r\n     * @property {number} Call 1\r\n     */\r\n    /**\r\n     * A {@link v9}․{@link PutOrCall} {@link enumeration} that contains each of the different values that may be returned from:</br>\r\n     *  - pEvent.PutOrCall.type\r\n     * @type {PutOrCall}\r\n     * @example\r\n     * onEvent(pSymbol, pEvent, pRealTime) {\r\n     *     // N/A\r\n     * }\r\n     */\r\n    this.PutOrCall = {\r\n      NotSet: 255,\r\n      Put: 0,\r\n      Call: 1\r\n    };\r\n\r\n    /**\r\n     * @typedef {enumeration} SettleType\r\n     * @property {number} Final 1\r\n     * @property {number} Actual 2\r\n     * @property {number} Rounded 4\r\n     * @property {number} Intraday 8\r\n     * @property {number} ReservedBits 16\r\n     * @property {number} NullValue 128\r\n     */\r\n    /**\r\n     * A {@link v9}․{@link SettleType} {@link enumeration} that contains each of the different values that may be returned from:</br>\r\n     *  - pEvent.dailyStatistics.settleType\r\n     * @type {SettleType}\r\n     * @example\r\n     * onEvent(pSymbol, pEvent, pRealTime) {\r\n     *     switch (pEvent.header.unionID) {\r\n     *    case v9.UnionID.DailyStatistics:\r\n     *                  var stl = pEvent.dailyStatistics.settleType;\r\n     *              break;\r\n     *          default :\r\n     *              break;\r\n     *     }\r\n     * }\r\n     */\r\n    this.SettleType = {\r\n      Final: 1,\r\n      Actual: 2,\r\n      Rounded: 4,\r\n      Intraday: 8,\r\n      ReservedBits: 16,\r\n      NullValue: 128\r\n    };\r\n\r\n    /**\r\n     * @typedef {enumeration} TransactionType\r\n     * @property {number} NotSet 255\r\n     * @property {number} TransactionStart 0\r\n     * @property {number} TransactionEnd 1\r\n     */\r\n    /**\r\n     * A {@link v9}․{@link TransactionType} {@link enumeration} that contains each of the different values that may be returned from:</br>\r\n     *  - pEvent.transactionMarker.transactionType\r\n     * @type {TransactionType}\r\n     * @example\r\n     * onEvent(pSymbol, pEvent, pRealTime) {\r\n     *     switch (pEvent.header.unionID) {\r\n     *    case v9.UnionID.TransactionMarker:\r\n     *                  var ttp = pEvent.transactionMarker.transactionType;\r\n     *              break;\r\n     *          default :\r\n     *              break;\r\n     *     }\r\n     * }\r\n     */\r\n    this.TransactionType = {\r\n      NotSet: 255,\r\n      TransactionStart: 0,\r\n      TransactionEnd: 1\r\n    };\r\n\r\n    /**\r\n     * @typedef {enumeration} EventIndicator\r\n     * @property {number} NotSet 0\r\n     * @property {number} LastOfType 1\r\n     * @property {number} EndOfEvent 128\r\n     */\r\n    /**\r\n     * A {@link v9}․{@link EventIndicator} {@link enumeration} that contains each of the different values that may be returned from:</br>\r\n     *  - pEvent.header.eventIndicator\r\n     * @type {EventIndicator}\r\n     * @example\r\n     * onEvent(pSymbol, pEvent, pRealTime) {\r\n     *     switch (pEvent.header.unionID) {\r\n     *    case v9.UnionID.EventIndicator:\r\n     *                  var ind = pEvent.header.eventIndicator;\r\n     *              break;\r\n     *          default :\r\n     *              break;\r\n     *     }\r\n     * }\r\n     */\r\n    this.EventIndicator = {\r\n      NotSet: 0,\r\n      LastOfType: 1,\r\n      EndOfEvent: 128\r\n    };\r\n\r\n    /**\r\n     * @typedef {enumeration} InvestigateStatus\r\n     * @property {number} NotSet 0\r\n     * @property {number} UnderInvestigation 1\r\n     * @property {number} InvestigationStatus 2\r\n     */\r\n    /**\r\n     * A {@link v9}․{@link InvestigateStatus} {@link enumeration} that contains each of the different values that may be returned from:</br>\r\n     *  - N/A\r\n     * @type {InvestigateStatus}\r\n     * @example\r\n     * onEvent(pSymbol, pEvent, pRealTime) {\r\n     *    // N/A\r\n     * }\r\n     */\r\n    this.InvestigateStatus = {\r\n      NotSet: 0,\r\n      UnderInvestigation: 1,\r\n      InvestigationCompleted: 2\r\n    };\r\n  }\r\n}\r\n\r\n/**\r\n * Class used for retrieving and referencing user input\r\n */\r\nv9.edit = class\r\n{\r\n  /**\r\n   * Used to retrieve user-specified values from the top of the pane (symbol and date correspond to the two default options at the top of a pane)\r\n   * @example\r\n   * // Specific v9 keywords (\"symbol\" and \"date\")\r\n   * let symbol = new v9.edit(\"symbol\").value; //gets the symbol from the default textbox at the top of the pane\r\n   * let date = new v9.edit(\"date\").value; //gets the date from the default textbox at the top of the pane\r\n   * \r\n   * // Custom user input keywords can be anything else\r\n   * let quantity = new v9.edit(\"QUANTITY\"); //gets the string the user inputs into a custom 'QUANTITY' textbox at the top of the pane\r\n   * let quantity = new v9.edit(\"QUANTITY\").value; //gets the string the user inputs into a custom 'QUANTITY' textbox at the top of the pane\r\n   * let quantity = new v9.edit(\"QUANTITY\").number; //gets the number the user inputs into a custom 'QUANTITY' textbox at the top of the pane\r\n   * @param {String} [pEditVariable]\r\n   */\r\n  constructor(pEditName) \r\n  {\r\n    /**\r\n     * @private\r\n     */\r\n    this.fEditType = qEditSymb;\r\n    /**\r\n     * @private\r\n     */\r\n    this.fEditName = pEditName;\r\n\r\n    if (pEditName)\r\n    {\r\n      if (gEditMaps[pEditName.toUpperCase()])\r\n      {\r\n        gHome._pageerro(gUniq, \"Edit name already defined\");\r\n      }\r\n      else\r\n      {\r\n        gEditMaps[pEditName.toUpperCase()] = true;\r\n      }\r\n\r\n      if (pEditName.toUpperCase() === \"SYMBOL\")\r\n      {\r\n        this.fEditType = qEditSymb;\r\n      }\r\n      else if (pEditName.toUpperCase() === \"DATE\")\r\n      {\r\n        this.fEditType = qEditDate;\r\n      }\r\n      else\r\n      {\r\n        gEditList.push(this);\r\n        this.fEditType = gEditSequ++;\r\n      }\r\n\r\n      /**\r\n       * @private\r\n       */\r\n      this.fEditEnum = gHome.MakeEdit(gUniq, this.fEditType, pEditName);\r\n    }\r\n    else\r\n    {\r\n      gHome._pageerro(gUniq, \"Edit name must be defined\");\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns the user input as a string\r\n   * @type {string}\r\n   */\r\n  get value()\r\n  {\r\n    return gHome._pageread(gUniq, this.fEditType);\r\n  }\r\n\r\n  /**\r\n   * Sets the user input value to the provided string\r\n   * @type {string}\r\n   * */\r\n  set value(pEdit)\r\n  {\r\n    return gHome._pagesave(gUniq, this.fEditType, pEdit);\r\n  }\r\n\r\n  /**\r\n   * Returns the user input as a number\r\n   * @type {number}\r\n   */\r\n  get number()\r\n  {\r\n    if (this._number) return this._number;\r\n    this._number = parseFloat(this.value);\r\n    return this._number;\r\n  }\r\n};\r\n\r\n/**\r\n * This class' functions should be overridden in each script for handling user actions and symbol events<br>\r\n * When finally instantiating your feed, refer to the {@link edit} class for handling all user input\r\n * @example\r\n * class MyFeed extends v9.feed {\r\n *     onInit() {\r\n *\t\t}\r\n * \r\n *\t\tonOpen(pMeta) {\r\n *\t\t}\r\n *\r\n *\t\tonStop() {\r\n *\t\t}\r\n *\r\n *\t\tonRender() {\r\n *\t\t}\r\n *\r\n *\t\tonEvent(pSymbol,pEvent,pRealTime) {\r\n *\t\t}\r\n * }\r\n *\r\n * // use\r\n * let feed = new MyFeed(); //Pulls symbol and date from v9 pane\r\n * // or\r\n * let feed = new MyFeed('NQ', '2020401'); //Custom symbol and date values can be entered here\r\n * // or\r\n * let feed = new MyFeed(symbol, date); //Custom symbol and date values can be implemented as variables\r\n * // or even\r\n * let request = {\r\n *     symbol: new v9.edit('symbol').value, //Pulls symbol from v9 pane (See edit class)\r\n *     startDate: '20200401',\r\n *     endDate: '20200430'\r\n * };\r\n * let feed = new MyFeed(request); //Pulls symbol from pane with custom start and end dates\r\n */\r\nv9.feed = class\r\n{\r\n  /**\r\n   * Used to provide the symbol and date to the current {@link feed}\r\n   * @param {String} [pSymbol]\r\n   * @param {String} [pDate]\r\n   */\r\n  constructor(pSymbol, pDate)\r\n  {\r\n    gHome.MakeFeed(gUniq, pSymbol, pDate);\r\n    gFeed = this;\r\n  }\r\n\r\n  /**\r\n   * Built in feed function that is called when the start button is pressed in order to initialize the chart.\r\n   * @abstract\r\n   * @example\r\n   * onInit() {\r\n   *     gChart = new v9.lineChart(\"container\"); //gChart must be a global var defined outside of your feed\r\n   * }\r\n   */\r\n  onInit() { }\r\n\r\n  /**\r\n   * @abstract\r\n   * @example\r\n   * onDone() {\r\n   * \r\n   * }\r\n   */\r\n  onDone() { }\r\n\r\n  /**\r\n   * @typedef {Object} Instrument\r\n   * @property {string} activationDate\r\n   *   @property {string} asset\r\n   *   @property {Boolean} completed\r\n   *   @property {string} contractSymbol\r\n   *   @property {string} currency\r\n   *   @property {number} definitionID\r\n   *   @property {number} depthLevel\r\n   *   @property {number} displayFactor\r\n   *   @property {number} displayType\r\n   *   @property {number} displayTypeEx\r\n   *   @property {number} eosInstrumentID\r\n   *   @property {number} exchInstrumentID\r\n   *   @property {string} exchType\r\n   *   @property {string} exchangeCode\r\n   *   @property {string} expireDate\r\n   *   @property {string} firstDataDate\r\n   *   @property {string} firstDefined\r\n   *   @property {string} groupCode\r\n   *   @property {number} impliedDepth\r\n   *   @property {number} instrumentType\r\n   *   @property {string} lastDataDate\r\n   *   @property {string} lastDefined\r\n   *   @property {string} lastExchUpdateTime\r\n   *   @property {number} loadSource\r\n   *   @property {number} marketTypeID\r\n   *   @property {number} maturityDay\r\n   *   @property {number} maturityMonth\r\n   *   @property {number} maturityYear\r\n   *   @property {number} priceDenominator\r\n   *   @property {string} roots \r\n   *   @property {number} settleDenominator\r\n   *   @property {number} tickSize\r\n   *   @property {number} tickValue\r\n   *   @property {number} unitOfMeasure\r\n   *   @property {Boolean} userDefined\r\n   *   @property {number} vxaChannel\r\n   *   @property {number} vxaId \r\n   */\r\n  // emailed ed about roots. Should potentially be just [{\"rt\": \"XX\"}]\r\n  // emailed ed about vxaId. should potentially be vxaID\r\n  /**\r\n   * @typedef {object} Meta\r\n   * @property {Instrument[]} instruments\r\n   * @property {string} message\r\n   * @property {number} records\r\n   * @property {number} restartTime\r\n   * @property {number} sessionTime\r\n   * @property {number} status\r\n   * @property {string} symbol\r\n   * @property {number} symbolID\r\n   * @property {number} userID\r\n   */\r\n  /**\r\n   * Built in feed function that is called at the start of each date between the startDate and endDate parameters of a multi-day script.\r\n   * @param {Meta} pMeta - Object representing json meta information. It currently provides the instrument definitions of the supplied symbol.\r\n   * @abstract\r\n   * @example\r\n   * onOpen(pMeta) {\r\n   *\r\n   * }\r\n   */\r\n  onOpen(pMeta) { }\r\n\r\n  /**\r\n   * Built in feed function that is called once the script has read every previous event in the symbol Feed.\r\n   * @abstract\r\n   * @deprecated\r\n   * @example\r\n   * onLoad() {\r\n   *\r\n   * }\r\n   */\r\n  onLoad() { }\r\n\r\n  /**\r\n   * Built in feed function that is called once for each frame that is rendered to the viewport.\r\n   * @abstract\r\n   * @example\r\n   * onRender() {\r\n   *\r\n   * }\r\n   */\r\n  onRender() { }\r\n\r\n  /**\r\n   * Built in feed function that is called once for each timestamp tracked in your symbol.\r\n   *\r\n   * This is where you'll be doing most of your calculations on the specific things you're looking for in your symbol. It allows your script to perform different tasks depending on the current event's conditions.\r\n   * @param {String} pSymbol - Name of the current symbol\r\n   * @param {Event} pEvent - Current event being handled\r\n   * @param {Boolean} pRealTime - Boolean determining whether or not to only handle current events\r\n   * @abstract\r\n   * @example\r\n   * onEvent(pSymbol, pEvent, pRealTime) {\r\n   *\r\n   * }\r\n   */\r\n  onEvent(pSymbol, pEvent, pRealTime) { }\r\n\r\n  /**\r\n   * Built in feed function that is called when the stop button is pressed.\r\n   * @abstract\r\n   * @example\r\n   * onStop() {\r\n   *\r\n   * }\r\n   */\r\n  onStop() { }\r\n};\r\n\r\n/**\r\n * Class used for rendering a line chart to the pane that should be called within the {@link onInit} function\r\n * @example\r\n * onInit() {\r\n *     gChart = new v9.lineChart(\"container\"); //gChart must be a global var defined outside of your feed\r\n * }\r\n */\r\nv9.lineChart = class\r\n{\r\n  constructor(pID)\r\n  {\r\n    this.fLineEnum = gHome.MakeLine(gUniq, (pID) ? document.getElementById(pID) : null);\r\n  }\r\n\r\n  linePush(pItem, pRate, pTime)\r\n  {\r\n    gHome.LinePush(gUniq, pItem.fCalcEnum, pRate, pTime);\r\n  }\r\n}\r\n\r\n/**\r\n * Class used for rendering a cube chart to the pane that should be called within the {@link onInit} function\r\n * @example\r\n * onInit() {\r\n *     gChart = new v9.cubeChart(\"container\"); //gChart must be a global var defined outside of your feed\r\n * }\r\n */\r\nv9.cubeChart = class\r\n{\r\n  constructor(pID)\r\n  {\r\n    this.fCubeEnum = gHome.MakeCube(gUniq, (pID) ? document.getElementById(pID) : null);\r\n  }\r\n\r\n  cubePlus(pItem, pData, pSize)\r\n  {\r\n    gHome.CubePlus(gUniq, pItem, pData, pSize);\r\n  }\r\n\r\n  cubeDele(pItem, pData)\r\n  {\r\n    gHome.CubeDele(gUniq, pItem, pData);\r\n  }\r\n\r\n  cubeSave(pItem, pData, pSize)\r\n  {\r\n    gHome.CubeSave(gUniq, pItem, pData, pSize);\r\n  }\r\n\r\n  cubeRead(pItem, pData)\r\n  {\r\n    gHome.CubeRead(gUniq, pItem, pData);\r\n  }\r\n\r\n  cubeFree(pItem)\r\n  {\r\n    gHome.CubeFree(gUniq, pItem);\r\n  }\r\n\r\n  cubePush(pItem, pSave)\r\n  {\r\n    gHome.CubePush(gUniq, pItem, pSave);\r\n  }\r\n}\r\n\r\n/**\r\n * Class used for rendering a v9 console window to the pane that should be called within the {@link onInit} function\r\n * @example\r\n * onInit() {\r\n *     gChart = new v9.console(\"container\"); //gChart must be a global var defined outside of your feed\r\n * }\r\n */\r\nv9.console = class\r\n{\r\n  constructor(pID)\r\n  {\r\n    this.fTalkEnum = gHome.MakeTalk(gUniq, (pID) ? document.getElementById(pID) : null);\r\n  }\r\n\r\n  /**\r\n   * Function that writes a provided string to a new line of the v9 console output\r\n   * @param {String} pText - String to be written to the v9 console\r\n   * @public\r\n   */\r\n  print(pText) \r\n  {\r\n    gHome.TalkText(gUniq, pText)\r\n  }\r\n}\r\n\r\nv9.lineItem = class\r\n{\r\n  constructor(pPane)\r\n  {\r\n    try\r\n    {\r\n      this.fCalcEnum = gHome.MakeCalc(gUniq, this);\r\n    } catch (e)\r\n    {\r\n      gHome.PageErro(gUniq, \"MakeCalc\", e);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stroke width in pixels\r\n   * @type {Number}\r\n   * @public\r\n   */\r\n  set lineWidth(pData)\r\n  {\r\n    try\r\n    {\r\n      this._lineWidth = pData;\r\n      gHome.Calc_lineWidth(gUniq, this.fCalcEnum, pData);\r\n    } catch (e)\r\n    {\r\n      gHome.PageErro(gUniq, \"lineWidth\", e);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stroke color in hexadecimal as a String\r\n   * @type {String}\r\n   * @public\r\n   */\r\n  set strokeStyle(pData)\r\n  {\r\n    try\r\n    {\r\n      this._strokeStyle = pData;\r\n      gHome.Calc_strokeStyle(gUniq, this.fCalcEnum, pData);\r\n    } catch (e)\r\n    {\r\n      gHome.PageErroo(gUniq, \"strokeStyle\", e);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @todo figure out what this does\r\n   * @type {String}\r\n   * @public\r\n   */\r\n  set format(pData)\r\n  {\r\n    try\r\n    {\r\n      this._format = pData;\r\n      gHome.Calc_format(gUniq, this.fCalcEnum, pData);\r\n    } catch (e)\r\n    {\r\n      gHome.PageErro(gUniq, \"format\", e);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Text color in hexadecimal as a String\r\n   * @type {String}\r\n   * @public\r\n   */\r\n  set textStyle(pData)\r\n  {\r\n    try\r\n    {\r\n      this._textStyle = pData;\r\n      gHome.Calc_textStyle(gUniq, this.fCalcEnum, pData);\r\n    } catch (e)\r\n    {\r\n      gHome.PageErro(gUniq, \"textStyle\", e);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @todo figure out what this does\r\n   * @type {String}\r\n   * @public\r\n   */\r\n  set bodyStyle(pData)\r\n  {\r\n    try\r\n    {\r\n      this._bodyStyle = pData;\r\n      gHome.Calc_bodyStyle(gUniq, this.fCalcEnum, pData);\r\n    } catch (e)\r\n    {\r\n      gHome.PageErro(gUniq, \"textStyle\", e);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Text corresponding to current line price\r\n   * @type {String}\r\n   * @public\r\n   */\r\n  set title(pData)\r\n  {\r\n    try\r\n    {\r\n      this._title = pData;\r\n      gHome.Calc_title(gUniq, this.fCalcEnum, pData);\r\n    } catch (e)\r\n    {\r\n      gHome.PageErro(gUniq, \"title\", e);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @todo figure out what this does\r\n   * @type {String}\r\n   * @public\r\n   */\r\n  set name(pData)\r\n  {\r\n    try\r\n    {\r\n      this._name = pData;\r\n      gHome.Calc_name(gUniq, this.fCalcEnum, pData);\r\n    } catch (e)\r\n    {\r\n      gHome.PageErro(gUniq, \"name\", e);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stroke width in pixels\r\n   * @type {Number}\r\n   * @public\r\n   */\r\n  get lineWidth()\r\n  {\r\n    return this._lineWidth;\r\n  }\r\n\r\n  /**\r\n   * Stroke color in hexadecimal as a String\r\n   * @type {String}\r\n   * @public\r\n   */\r\n  get strokeStyle()\r\n  {\r\n    return this._strokeStyle;\r\n  }\r\n\r\n  /**\r\n   * Text color in hexadecimal as a String\r\n   * @type {String}\r\n   * @public\r\n   */\r\n  get textStyle()\r\n  {\r\n    return this._textStyle;\r\n  }\r\n\r\n  /**\r\n   * @todo figure out what this does\r\n   * @type {String}\r\n   * @readonly\r\n   */\r\n  get eventStyle()\r\n  {\r\n    return this._eventStyle;\r\n  }\r\n\r\n  /**\r\n   * The line item's title that appears in the top-left corner of the pane\r\n   * @type {String}\r\n   * @public\r\n   */\r\n  get title()\r\n  {\r\n    return this._title;\r\n  }\r\n\r\n  /**\r\n   * @todo figure out what this does\r\n   * @type {String}\r\n   * @public\r\n   */\r\n  get format()\r\n  {\r\n    return this._format;\r\n  }\r\n};\r\n\r\nv9.cubeItem = class\r\n{\r\n  constructor(pPane)\r\n  {\r\n    try\r\n    {\r\n      this.fCalcEnum = gHome.MakeCalc(gUniq, this);\r\n      this.fCubeMaps = new Map();\r\n    } catch (e)\r\n    {\r\n      gHome.PageErro(gUniq, \"MakeCalc\", e);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stroke width in pixels\r\n   * @type {Number}\r\n   * @public\r\n   */\r\n  set lineWidth(pData)\r\n  {\r\n    try\r\n    {\r\n      this._lineWidth = pData;\r\n      gHome.Calc_lineWidth(gUniq, this.fCalcEnum, pData);\r\n    } catch (e)\r\n    {\r\n      gHome.PageErro(gUniq, \"lineWidth\", e);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stroke color in hexadecimal as a String\r\n   * @type {String}\r\n   * @public\r\n   */\r\n  set strokeStyle(pData)\r\n  {\r\n    try\r\n    {\r\n      this._strokeStyle = pData;\r\n      gHome.Calc_strokeStyle(gUniq, this.fCalcEnum, pData);\r\n    } catch (e)\r\n    {\r\n      gHome.PageErroo(gUniq, \"strokeStyle\", e);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @todo figure out what this does\r\n   * @type {String}\r\n   * @readonly\r\n   */\r\n  set format(pData)\r\n  {\r\n    try\r\n    {\r\n      this._format = pData;\r\n      gHome.Calc_format(gUniq, this.fCalcEnum, pData);\r\n    } catch (e)\r\n    {\r\n      gHome.PageErro(gUniq, \"format\", e);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Text color in hexadecimal as a String\r\n   * @type {String}\r\n   * @public\r\n   */\r\n  set textStyle(pData)\r\n  {\r\n    try\r\n    {\r\n      this._textStyle = pData;\r\n      gHome.Calc_textStyle(gUniq, this.fCalcEnum, pData);\r\n    } catch (e)\r\n    {\r\n      gHome.PageErro(gUniq, \"textStyle\", e);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @todo figure out what this does\r\n   * @type {String}\r\n   * @public\r\n   */\r\n  set bodyStyle(pData)\r\n  {\r\n    try\r\n    {\r\n      this._bodyStyle = pData;\r\n      gHome.Calc_bodyStyle(gUniq, this.fCalcEnum, pData);\r\n    } catch (e)\r\n    {\r\n      gHome.PageErro(gUniq, \"textStyle\", e);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Text corresponding to current cube price\r\n   * @type {String}\r\n   * @public\r\n   */\r\n  set title(pData)\r\n  {\r\n    try\r\n    {\r\n      this._title = pData;\r\n      gHome.Calc_title(gUniq, this.fCalcEnum, pData);\r\n    } catch (e)\r\n    {\r\n      gHome.PageErro(gUniq, \"title\", e);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @todo figure out what this does\r\n   * @type {String}\r\n   * @public\r\n   */\r\n  set name(pData)\r\n  {\r\n    try\r\n    {\r\n      this._name = pData;\r\n      gHome.Calc_name(gUniq, this.fCalcEnum, pData);\r\n    } catch (e)\r\n    {\r\n      gHome.PageErro(gUniq, \"name\", e);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Stroke width in pixels\r\n   * @type {Number}\r\n   * @public\r\n   */\r\n  get lineWidth()\r\n  {\r\n    return this._lineWidth;\r\n  }\r\n\r\n  /**\r\n   * Stroke color in hexadecimal as a String\r\n   * @type {String}\r\n   * @public\r\n   */\r\n  get strokeStyle()\r\n  {\r\n    return this._strokeStyle;\r\n  }\r\n\r\n  /**\r\n   * Text color in hexadecimal as a String\r\n   * @type {String}\r\n   * @public\r\n   */\r\n  get textStyle()\r\n  {\r\n    return this._textStyle;\r\n  }\r\n\r\n  /**\r\n   * @todo figure out what this does\r\n   * @type {String}\r\n   * @readonly\r\n   */\r\n  get eventStyle()\r\n  {\r\n    return this._eventStyle;\r\n  }\r\n\r\n  /**\r\n   * The cube item's title that appears in the top-left corner of the pane\r\n   * @type {String}\r\n   * @public\r\n   */\r\n  get title()\r\n  {\r\n    return this._title;\r\n  }\r\n\r\n  /**\r\n   * @todo figure out what this does\r\n   * @type {String}\r\n   * @public\r\n   */\r\n  get format()\r\n  {\r\n    return this._format;\r\n  }\r\n};\r\n\r\n/**\r\n * Returns a JSON Object representing the provided {@link Event}\r\n * @param {Event} pEvent\r\n */\r\nv9.eventToJson = function (pEvent)\r\n{\r\n  let tEvent = v9.eventCopy(pEvent);\r\n\r\n  if (tEvent !== undefined)\r\n  {\r\n    let intCount = 0,\r\n      repCount = 0;\r\n    const json = JSON.stringify(tEvent, (_, v) =>\r\n    {\r\n      if (typeof v === \"bigint\")\r\n      {\r\n        intCount++;\r\n        return `${v}#bigint`;\r\n      }\r\n      return v;\r\n    });\r\n    const res = json.replace(/\"(-?\\d+)#bigint\"/g, (_, a) =>\r\n    {\r\n      repCount++;\r\n      return a;\r\n    });\r\n    if (repCount > intCount)\r\n    {\r\n      // You have a string somewhere that looks like \"123#bigint\";\r\n      throw new Error(\r\n        `BigInt serialization pattern conflict with a string value.`\r\n      );\r\n    }\r\n    return res;\r\n  }\r\n};\r\n\r\n/**\r\n * Returns a copy of a provided {@link Event}\r\n * @param {Event} pEvent\r\n */\r\nv9.eventCopy = function (pEvent)\r\n{\r\n  let tEvent = {};\r\n\r\n  if (pEvent.header)\r\n  {\r\n    tEvent.header = {};\r\n    tEvent.header = Object.assign(pEvent.header);\r\n  }\r\n\r\n  try\r\n  {\r\n    switch (pEvent.header.unionID)\r\n    {\r\n      case v9.UnionID.TransactionMarker:\r\n        tEvent.transactionMarker = {};\r\n        tEvent.transactionMarker = Object.assign(pEvent.transactionMarker);\r\n        break;\r\n      case v9.UnionID.ChannelReset:\r\n        tEvent.channelReset = {};\r\n        tEvent.channelReset = Object.assign(pEvent.channelReset);\r\n        break;\r\n      case v9.UnionID.TradeSummary:\r\n        tEvent.tradeSummary = {};\r\n        tEvent.tradeSummary = Object.assign(pEvent.tradeSummary);\r\n        break;\r\n      case v9.UnionID.TradeMatch:\r\n        tEvent.tradeMatch = {};\r\n        tEvent.tradeMatch = Object.assign(pEvent.tradeMatch);\r\n        break;\r\n      case v9.UnionID.VolumeUpdate:\r\n        tEvent.volumeUpdate = {};\r\n        tEvent.volumeUpdate = Object.assign(pEvent.volumeUpdate);\r\n        break;\r\n      case v9.UnionID.BookLevel:\r\n        tEvent.bookLevel = {};\r\n        tEvent.bookLevel = Object.assign(pEvent.bookLevel);\r\n        break;\r\n      case v9.UnionID.OrderBook:\r\n        tEvent.orderBook = {};\r\n        tEvent.orderBook = Object.assign(pEvent.orderBook);\r\n        break;\r\n      case v9.UnionID.SecurityStatus:\r\n        tEvent.securityStatus = {};\r\n        tEvent.securityStatus = Object.assign(pEvent.securityStatus);\r\n        break;\r\n      case v9.UnionID.DailyStatistics:\r\n        tEvent.dailyStatistics = {};\r\n        tEvent.dailyStatistics = Object.assign(pEvent.dailyStatistics);\r\n        break;\r\n      case v9.UnionID.SessionStatistics:\r\n        tEvent.sessionStatistics = {};\r\n        tEvent.sessionStatistics = Object.assign(pEvent.sessionStatistics);\r\n        break;\r\n      case v9.UnionID.LimitsBanding:\r\n        tEvent.limitsBanding = {};\r\n        tEvent.limitsBanding = Object.assign(pEvent.limitsBanding);\r\n        break;\r\n      case v9.UnionID.ClearingPrice:\r\n        tEvent.clearingPrice = {};\r\n        tEvent.clearingPrice = Object.assign(pEvent.clearingPrice);\r\n        break;\r\n    }\r\n  } catch (e) { }\r\n\r\n  return tEvent;\r\n};\r\n\r\n/**\r\n * Reports errors to the debugging window\r\n * @param {String} msg\r\n * @param {String} url\r\n * @param {Number} lineNo\r\n * @param {Number} columnNo\r\n * @param {any} error\r\n */\r\nwindow.onerror = function (msg, url, lineNo, columnNo, error)\r\n{\r\n  var string = msg.toLowerCase();\r\n  var substring = \"script error\";\r\n  if (string.indexOf(substring) > -1)\r\n  {\r\n    gHome._pageerro(gUniq, \"Script Error: See Browser Console for Detail\");\r\n  } else\r\n  {\r\n    //var message = [\r\n    //\t'Message: ' + msg,\r\n    //\t'URL: ' + url,\r\n    //\t'Line: ' + lineNo,\r\n    //\t'Column: ' + columnNo,\r\n    //\t'Error object: ' + JSON.stringify(error)\r\n    //].join(' - ');\r\n\r\n    var message = [\r\n      \"Message: \" + msg,\r\n      \"Line: \" + lineNo,\r\n      \"Column: \" + columnNo\r\n    ].join(\" - \");\r\n\r\n    gHome._pageerro(gUniq, message);\r\n  }\r\n};\r\n\r\n/**\r\n * Class used for referencing any individual {@link Event} from the current {@link feed}\r\n */\r\nexport class Event\r\n{\r\n  constructor()\r\n  {\r\n    /**\r\n     * @typedef {object} Header\r\n     * @property {number} unionID Enumerated value used to find the type of an Event object\r\n     * @property {number} sequence The current Event object's session array index\r\n     * @property {number} time The exact time of the current Event in nanoseconds as a BigInt\r\n     * @property {number} timeH The higher half of the aforementioned time member as a Number\r\n     * @property {number} timeL The lower half of the aforementioned time member as a Number\r\n     * @property {number} milliseconds The aforementioned time member in milliseconds as a Number\r\n     */\r\n    /**\r\n     * Each Event’s header object provides access to general Event information and is accessed using:\r\n     *  - <EventName>.header.<memberName>\r\n     * @type {Header}\r\n     * @example\r\n     * onEvent(pSymbol, pEvent, pRealTime) {\r\n     *     switch (pEvent.header.unionID) {\r\n     *         case v9.UnionID.TradeSummary:\r\n     *             var fTime = new Date(pEvent.header.milliseconds).toLocalTimeString(); //Formats the date and time based off of the current Event's time in milliseconds\r\n     *             break;\r\n     *         default :\r\n     *             break;\r\n     *     }\r\n     * }\r\n     */\r\n    this.header = {\r\n      unionID: 255,\r\n      sequence: 0, //Each event within a feed has an assigned sequence value that\r\n      time: 0,\r\n      timeH: 0,\r\n      timeL: 0,\r\n      milliseconds: 0\r\n    };\r\n\r\n    /**\r\n     * @typedef {enumeration} TradeSummary\r\n     * @property {number} price The price of the current Event\r\n     * @property {number} quantity The total quantity matched for the the current Event\r\n     * @property {number} matches The number of upcoming orders that will participate in the current Event\r\n     * @property {Aggressor} aggressor The aggressor of the trade the current Event is summarizing\r\n     * @property {boolean} isImplied Whether or not the trade the current Event is summarizing was implied\r\n     * @property {number} isSnapshot Whether or not the current Event is a market summary\r\n     * @property {number} volume The accumulated volume of the current session\r\n     */\r\n    /**\r\n     * Each tradeSummary Event object is accessed using:\r\n     *  - <EventName>.header.tradeSummary\r\n     * @type {TradeSummary}\r\n     */\r\n    this.tradeSummary = {\r\n      price: 0,\r\n      quantity: 0,\r\n      matches: 0,\r\n      aggressor: 0,\r\n      isImplied: false,\r\n      isSnapshot: false,\r\n      volume: 0\r\n    };\r\n\r\n    /**\r\n     * @typedef {object} TradeMatch\r\n     * @property {number} price The price of the current Event\r\n     * @property {number} quantity The total quantity matched for the current Event\r\n     * @property {number} number The enumerated value from 0 to number of TradeSummary.matches\r\n     * @property {boolean} isAggressor Whether or not the current Event was made by the aggressor of the trade.\r\n     * @property {number} orderID The identifier for the current Event’s order\r\n     * @property {number} auxilaryID The original identifier for the current Event’s order.\r\n     * @property {number} flags These bits are exchange specific. If you don’t know which exchange this file came from, the exchange for this instrId is located in the Instrument Information message.\r\n     */\r\n    /**\r\n     * Each tradeMatch Event object is accessed using:\r\n     *  - <EventName>.header.tradeMatch\r\n     * @type {TradeMatch}\r\n     */\r\n    this.tradeMatch = {\r\n      price: 0,\r\n      quantity: 0,\r\n      number: 0,\r\n      isAggressor: 0,\r\n      orderID: 0,\r\n      auxiliaryID: 0,\r\n      flags: 0\r\n    };\r\n\r\n    /**\r\n     * @typedef {object} VolumeUpdate\r\n     * @property {number} volume The total volume for the session including the current Event\r\n     * @property {number} vwap An ICE-specific stat metric\r\n     */\r\n    /**\r\n     * Each volumeUpdate Event object is accessed using:\r\n     *  - <EventName>.header.volumeUpdate\r\n     * @type {VolumeUpdate}\r\n     * */\r\n    this.volumeUpdate = {\r\n      volume: 0,\r\n      vwap: 0\r\n    };\r\n\r\n    /**\r\n     * @typedef {object} BookLevel\r\n     * @property {number} price The price of the current Event\r\n     * @property {number} quantity The total quantity matched for the the current Event\r\n     * @property {number} orders The number of orders that participated at the current Event’s price level\r\n     * @property {number} impliedQuantity The total implied quantity at the current event’s price level\r\n     * @property {number} impliedOrders The total number of implied orders at the current event’s price level\r\n     * @property {number} level The price level at which the event occurred\r\n     * @property {BookAction} action The book action of the order corresponding to the current event\r\n     * @property {BookType} type The type of the current Event\r\n     * @property {boolean} isEndEvent Whether or not the current Event is the last Event of the packet\r\n     */\r\n    /**\r\n     * Each bookLevel Event object is accessed using:\r\n     *  - <EventName>.header.bookLevel\r\n     * @type {BookLevel}\r\n     */\r\n    this.bookLevel = {\r\n      price: 0,\r\n      quantity: 0,\r\n      orders: 0,\r\n      impliedQuantity: 0,\r\n      impliedOrders: 0,\r\n      level: 0,\r\n      action: 255,\r\n      type: 85,\r\n      isEndEvent: false\r\n    };\r\n\r\n    /**\r\n     * @typedef {object} OrderBook\r\n     * @property {number} price The price of the current Event\r\n     * @property {BookType} type The type of the current Event\r\n     * @property {number} quantity The total quantity matched for the current Event\r\n     * @property {number} priorityID The order priority for execution on the current order book : Lower = higher priority\r\n     * @property {boolean} auxilaryID The first OrderID assigned because some exchanges change the orderID : Only ICE and Eurex Exchanges\r\n     * @property {number} previousID If an orderID is changed, this is the ID that was just replaced : Eurex\r\n     * @property {number} orderID The identifier for the current Event's order\r\n     * @property {BookAction} action The book action of the order corresponding to the current event\r\n     */\r\n    /**\r\n     * Each orderBook Event object is accessed using:\r\n     *  - <EventName>.header.orderBook\r\n     * @type {OrderBook}\r\n     */\r\n    this.orderBook = {\r\n      price: 0,\r\n      type: 85,\r\n      quantity: 0,\r\n      priorityID: 0,\r\n      auxiliaryID: 0,\r\n      previousID: 0,\r\n      orderID: 0,\r\n      action: 255\r\n    };\r\n\r\n    /**\r\n     * @typedef {object} SecurityStatus\r\n     * @property {number} group The exchange specific code assigned to a group of related securities, which are concurrently affected by market events\r\n     * @property {BookType} asset The underlying asset code represented as a String\r\n     * @property {number} sessionDate The date of the current Event's trading session\r\n     * @property {number} type The total implied quantity at the current event's price level\r\n     * @property {HaltReason} haltReason The reason why the market has been halted\r\n     * @property {SecurityEvent} securityEvent Additional reasoning for the market being halted\r\n     */\r\n    /**\r\n     * Each securityStatus Event object is accessed using:\r\n     *  - <EventName>.header.securityStatus\r\n     * @type {SecurityStatus}\r\n     */\r\n    this.securityStatus = {\r\n      group: \"\",\r\n      asset: \"\",\r\n      sessionDate: 0,\r\n      type: 0,\r\n      haltReason: 255,\r\n      securityEvent: 0\r\n    };\r\n\r\n    /**\r\n     * @typedef {object} DailyStatistics\r\n     * @property {number} price The price of the current Event\r\n     * @property {number} instrumentID The unique instrument identifier for the current exchange\r\n     * @property {number} impliedQuantity The total number of Events in the current session : Only applies to OpenInterest type\r\n     * @property {number} impliedOrders The total number of implied orders at the current event's price level\r\n     * @property {number} level The price level at which the event occurred\r\n     * @property {BookAction} action The book action of the order corresponding to the current event\r\n     * @property {DailyStatisticsType} type The type of the current Event\r\n     * @property {SettleType} settleType The settlement type of the current Event\r\n     * @property {boolean} isEndEvent Whether or not the current Event is the last Event of the packet\r\n     */\r\n    /**\r\n     * Each dailyStatistics Event object is accessed using:\r\n     *  - <EventName>.header.dailyStatistics\r\n     * @type {DailyStatistics}\r\n     */\r\n    this.dailyStatistics = {\r\n      price: 0,\r\n      instrumentID: 0,\r\n      size: 0,\r\n      impliedQuantity: 0,\r\n      impliedOrders: 0,\r\n      level: 0,\r\n      action: 255,\r\n      type: 0, // waiting for Ed\r\n      settleType: 0,\r\n      isEndEvent: false\r\n    };\r\n\r\n    /**\r\n     * @typedef {object} SessionStatistics\r\n     * @property {number} price The price of the current Event\r\n     * @property {number} instrumentID The unique instrument identifier for the current exchange\r\n     * @property {StateType} stateType The OpeningPrice type of the current Event\r\n     * @property {BookAction} action The book action of the order corresponding to the current event\r\n     * @property {SessionStatisticsType} type The type of the current Event\r\n     * @property {number} size The total number of Events in the current session\r\n     */\r\n    /**\r\n     * Each sessionStatistics Event object is accessed using:\r\n     *  - <EventName>.header.sessionStatistics\r\n     * @type {SessionStatistics}\r\n     */\r\n    this.sessionStatistics = {\r\n      price: 0,\r\n      instrumentID: 0,\r\n      stateType: 255,\r\n      action: 255,\r\n      type: 127,\r\n      size: 0\r\n    };\r\n\r\n    /**\r\n     * @typedef {object} LimitsBanding\r\n     * @property {number} highLimit The lowest price level the contract can trade in this session\r\n     * @property {number} lowLimit The highest price level the contract can trade in this session\r\n     * @property {number} maxVariation The maximum tradeable range for this session\r\n     */\r\n    /**\r\n     * Each limitsBanding Event object is accessed using:\r\n     *  - <EventName>.header.limitsBanding\r\n     * @type {LimitsBanding}\r\n     */\r\n    this.limitsBanding = {\r\n      highLimit: 0,\r\n      lowLimit: 0,\r\n      maxVariation: 0\r\n    };\r\n\r\n    /**\r\n     * @typedef {object} ChannelReset\r\n     * @property {BookType} type The type of the current Event\r\n     */\r\n    /**\r\n     * Each channelReset Event object is accessed using:\r\n     *  - <EventName>.header.channelReset\r\n     * @type {ChannelReset}\r\n     * */\r\n    this.channelReset = {\r\n      type: 85\r\n    };\r\n\r\n    /**\r\n     * @typedef {object} TransactionMarker\r\n     * @property {TransactionType} type The type of the current Event\r\n     */\r\n    /**\r\n     * Each transactionMarker Event object is accessed using:\r\n     *  - <EventName>.header.transactionMarker\r\n     * @type {TransactionMarker}\r\n     * @return\r\n     */\r\n    this.transactionMarker = {\r\n      type: 255\r\n    };\r\n  }\r\n}\r\n",
    "static": true,
    "longname": "/mnt/c/Users/Blake Reset/source/repos/PlGGS/docs/src/index.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "qEditSymb",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~qEditSymb",
    "access": "private",
    "export": false,
    "importPath": "evntscript/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 5,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 50,
    "kind": "variable",
    "name": "qEditDate",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~qEditDate",
    "access": "private",
    "export": false,
    "importPath": "evntscript/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 10,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "name": "littleEndian",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~littleEndian",
    "access": "private",
    "export": false,
    "importPath": "evntscript/src/index.js",
    "importStyle": null,
    "description": "",
    "lineNumber": 15,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 52,
    "kind": "typedef",
    "name": "enumeration",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~enumeration",
    "access": "public",
    "description": "A built-in JavaScript {@link Object} that only contains member variables with corresponding {@link number}(s)",
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "enumeration"
    }
  },
  {
    "__docId__": 53,
    "kind": "typedef",
    "name": "BigInt",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~BigInt",
    "access": "public",
    "description": "A built-in JavaScript {@link Object} that provides a way to represent whole numbers larger than 2^53-1",
    "see": [
      "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt"
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "BigInt"
    }
  },
  {
    "__docId__": 54,
    "kind": "class",
    "name": "v9",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~v9",
    "access": "public",
    "export": true,
    "importPath": "evntscript/src/index.js",
    "importStyle": "{v9}",
    "description": "Class used for referencing all v9 event enumerations and data",
    "lineNumber": 30,
    "interface": false
  },
  {
    "__docId__": 55,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/index.js~v9",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~v9#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 32,
    "undocument": true
  },
  {
    "__docId__": 56,
    "kind": "member",
    "name": "PRICE_NULL_32",
    "memberof": "src/index.js~v9",
    "static": false,
    "longname": "src/index.js~v9#PRICE_NULL_32",
    "access": "private",
    "description": "Value used specify a non-existent 32 bit price returned",
    "lineNumber": 38,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "member",
    "name": "PRICE_NULL_64",
    "memberof": "src/index.js~v9",
    "static": false,
    "longname": "src/index.js~v9#PRICE_NULL_64",
    "access": "private",
    "description": "Value used specify a non-existent 64 bit price returned",
    "lineNumber": 44,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "member",
    "name": "sGroupSettleID",
    "memberof": "src/index.js~v9",
    "static": false,
    "longname": "src/index.js~v9#sGroupSettleID",
    "access": "private",
    "description": "",
    "lineNumber": 50,
    "ignore": true,
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 59,
    "kind": "typedef",
    "name": "UnionID",
    "memberof": "src/index.js~v9",
    "static": true,
    "longname": "src/index.js~v9.UnionID",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "NotSet",
        "description": "255"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "NotMapped",
        "description": "250"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "TradeSummary",
        "description": "0 : Message that contains summary information about trades"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "TradeMatch",
        "description": "1 : Message that contains information on a match of a trade event"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "VolumeUpdate",
        "description": "2 : Message that updates volume data after a TradeSummary event. On certain exchanges if two implied quotes are matched, a VolumeUpdate event will occur showing the change in the total volume, but it will not be tied to a TradeSummary event"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "BookLevel",
        "description": "3 : Message that contains information on a quote that occurred in the first n levels of the book. The instrument definition from the exchange specifies the exact number of levels. This message can show up alongside an OD message"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "OrderBook",
        "description": "4 : Message that contains information on a quote for all price levels"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "SecurityStatus",
        "description": "5 : Message that provides the security group market state change"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "DailyStatistics",
        "description": "6 : Message that provides information about a complete session"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "SessionStatistics",
        "description": "7 : Message that provides information about the session during the session"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "LimitsBanding",
        "description": "8 : Message that provides the daily limits for the current session"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ChannelReset",
        "description": "9 : Message that indicates if the channel the contract is on was reset and at what time"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "TransactionMarker",
        "description": "10 : The TS message marks the start of a bundle, and the TE message marks the end of that bundle. The exchange considers all the messages between the start and end marker to have been processed together, regardless of how the packets were split during exchange transmission"
      }
    ],
    "type": {
      "types": [
        "enumeration"
      ],
      "optional": false,
      "name": "UnionID"
    }
  },
  {
    "__docId__": 60,
    "kind": "member",
    "name": "UnionID",
    "memberof": "src/index.js~v9",
    "static": false,
    "longname": "src/index.js~v9#UnionID",
    "access": "public",
    "description": "A {@link v9}․{@link UnionID} {@link enumeration} that contains each of the different values that may be returned from:</br>\n - v9.UnionID",
    "examples": [
      "onEvent(pSymbol, pEvent, pRealTime) {\n    switch (pEvent.header.unionID) {\n        case v9.UnionID.<Value>:\n            // Do something when pEvent.header.unionID is equal to v9.UnionID.<Value>\n            break;\n        default :\n            break;\n    }\n}"
    ],
    "lineNumber": 84,
    "type": {
      "nullable": null,
      "types": [
        "enumeration"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 61,
    "kind": "typedef",
    "name": "Aggressor",
    "memberof": "src/index.js~v9",
    "static": true,
    "longname": "src/index.js~v9.Aggressor",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "NoAggressor",
        "description": "0"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Buy",
        "description": "1"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Sell",
        "description": "2"
      }
    ],
    "type": {
      "types": [
        "enumeration"
      ],
      "optional": false,
      "name": "Aggressor"
    }
  },
  {
    "__docId__": 62,
    "kind": "member",
    "name": "Aggressor",
    "memberof": "src/index.js~v9",
    "static": false,
    "longname": "src/index.js~v9#Aggressor",
    "access": "public",
    "description": "A {@link v9}․{@link Aggressor} {@link enumeration} that contains each of the different values that may be returned from:</br>\n - pEvent.tradeSummary.aggressor",
    "examples": [
      "onEvent(pSymbol, pEvent, pRealTime) {\n    switch (pEvent.header.unionID) {\n   case v9.UnionID.TradeSummary:\n                 var agr = pEvent.tradeSummary.aggressor;\n             break;\n         default :\n             break;\n    }\n}"
    ],
    "lineNumber": 123,
    "type": {
      "nullable": null,
      "types": [
        "Aggressor"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 63,
    "kind": "typedef",
    "name": "HaltReason",
    "memberof": "src/index.js~v9",
    "static": true,
    "longname": "src/index.js~v9.HaltReason",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "NotSet",
        "description": "255"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "GroupSchedule",
        "description": "0"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "SurveillanceIntervention",
        "description": "1"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "MarketEvent",
        "description": "2"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "InstrumentActivation",
        "description": "3"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "InstrumentExpiration",
        "description": "4"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Unknown",
        "description": "5"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "RecoveryInProcess",
        "description": "6"
      }
    ],
    "type": {
      "types": [
        "enumeration"
      ],
      "optional": false,
      "name": "HaltReason"
    }
  },
  {
    "__docId__": 64,
    "kind": "member",
    "name": "HaltReason",
    "memberof": "src/index.js~v9",
    "static": false,
    "longname": "src/index.js~v9#HaltReason",
    "access": "public",
    "description": "A {@link v9}․{@link HaltReason} {@link enumeration} that contains each of the different values that may be returned from:</br>\n - pEvent.securityStatus.haltReason",
    "examples": [
      "onEvent(pSymbol, pEvent, pRealTime) {\n    switch (pEvent.header.unionID) {\n        case v9.UnionID.SecurityStatus:\n            var hlt = pEvent.securityStatus.haltReason;\n            break;\n        default :\n            break;\n    }\n}"
    ],
    "lineNumber": 155,
    "type": {
      "nullable": null,
      "types": [
        "HaltReason"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 65,
    "kind": "typedef",
    "name": "SecurityType",
    "memberof": "src/index.js~v9",
    "static": true,
    "longname": "src/index.js~v9.SecurityType",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "NotSet",
        "description": "0"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "TradingHalt",
        "description": "2"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Close",
        "description": "4"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "NewPriceIndication",
        "description": "15"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ReadyToTrade",
        "description": "17"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "NotAvailableForTrading",
        "description": "18"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "UnknownorInvalid",
        "description": "20"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "PreOpen",
        "description": "21"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "PreCross",
        "description": "24"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "PostClose",
        "description": "26"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "NoChange",
        "description": "103"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "PreClose",
        "description": "150 : Only ICE Exchange"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Restricted",
        "description": "200 : Only EUREX Exchange"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Freeze",
        "description": "201 : Only EUREX Exchange"
      }
    ],
    "type": {
      "types": [
        "enumeration"
      ],
      "optional": false,
      "name": "SecurityType"
    }
  },
  {
    "__docId__": 66,
    "kind": "member",
    "name": "SecurityType",
    "memberof": "src/index.js~v9",
    "static": false,
    "longname": "src/index.js~v9#SecurityType",
    "access": "public",
    "description": "A {@link v9}․{@link SecurityType} {@link enumeration} that contains each of the different values that may be returned from:</br>\n - pEvent.securityStatus.type",
    "examples": [
      "onEvent(pSymbol, pEvent, pRealTime) {\n    switch (pEvent.header.unionID) {\n        case v9.UnionID.SecurityStatus:\n            var typ = pEvent.securityStatus.type;\n            break;\n        default :\n            break;\n    }\n}"
    ],
    "lineNumber": 198,
    "type": {
      "nullable": null,
      "types": [
        "SecurityType"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 67,
    "kind": "typedef",
    "name": "SecurityEvent",
    "memberof": "src/index.js~v9",
    "static": true,
    "longname": "src/index.js~v9.SecurityEvent",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "NoEvent",
        "description": "0"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "NoCancel",
        "description": "1"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ResetStatistics",
        "description": "4"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ImpliedMatchingON",
        "description": "5"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ImpliedMatchingOFF",
        "description": "6"
      }
    ],
    "type": {
      "types": [
        "enumeration"
      ],
      "optional": false,
      "name": "SecurityEvent"
    }
  },
  {
    "__docId__": 68,
    "kind": "member",
    "name": "SecurityEvent",
    "memberof": "src/index.js~v9",
    "static": false,
    "longname": "src/index.js~v9#SecurityEvent",
    "access": "public",
    "description": "A {@link v9}․{@link SecurityEvent} {@link enumeration} that contains each of the different values that may be returned from:</br>\n - pEvent.securityStatus.securityEvent",
    "examples": [
      "onEvent(pSymbol, pEvent, pRealTime) {\n    switch (pEvent.header.unionID) {\n   case v9.UnionID.SecurityStatus:\n                 var sev = pEvent.securityStatus.securityEvent;\n             break;\n         default :\n             break;\n    }\n}"
    ],
    "lineNumber": 239,
    "type": {
      "nullable": null,
      "types": [
        "SecurityEvent"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 69,
    "kind": "typedef",
    "name": "BookType",
    "memberof": "src/index.js~v9",
    "static": true,
    "longname": "src/index.js~v9.BookType",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "NotSet",
        "description": "85"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Bid",
        "description": "66"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Ask",
        "description": "83"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ImpliedBid",
        "description": "98"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ImpliedAsk",
        "description": "115"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "BookReset",
        "description": "82"
      }
    ],
    "type": {
      "types": [
        "enumeration"
      ],
      "optional": false,
      "name": "BookType"
    }
  },
  {
    "__docId__": 70,
    "kind": "member",
    "name": "BookType",
    "memberof": "src/index.js~v9",
    "static": false,
    "longname": "src/index.js~v9#BookType",
    "access": "public",
    "description": "A {@link v9}․{@link BookType} {@link enumeration} that contains each of the different values that may be returned from:</br>\n - pEvent.orderBook.type\n - pEvent.bookLevel.type",
    "examples": [
      "onEvent(pSymbol, pEvent, pRealTime) {\n    switch (pEvent.header.unionID) {\n   case v9.UnionID.OrderBook:\n                 var typ = pEvent.orderBook.type;\n             break;\n         default :\n             break;\n    }\n}"
    ],
    "lineNumber": 272,
    "type": {
      "nullable": null,
      "types": [
        "BookType"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 71,
    "kind": "typedef",
    "name": "DailyStatisticsType",
    "memberof": "src/index.js~v9",
    "static": true,
    "longname": "src/index.js~v9.DailyStatisticsType",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "SettlePrice",
        "description": "'6'"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ClearedVolume",
        "description": "'B'"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "OpenInterest",
        "description": "'C'"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Fixing",
        "description": "'W'"
      }
    ],
    "type": {
      "types": [
        "enumeration"
      ],
      "optional": false,
      "name": "DailyStatisticsType"
    }
  },
  {
    "__docId__": 72,
    "kind": "member",
    "name": "DailyStatisticsType",
    "memberof": "src/index.js~v9",
    "static": false,
    "longname": "src/index.js~v9#DailyStatisticsType",
    "access": "public",
    "description": "A {@link v9}․{@link DailyStatisticsType} {@link enumeration} that contains each of the different values that may be returned from:</br>\n - pEvent.dailyStatistics.type",
    "examples": [
      "onEvent(pSymbol, pEvent, pRealTime) {\n    switch (pEvent.header.unionID) {\n   case v9.UnionID.DailyStatistics:\n                 var typ = pEvent.dailyStatistics.type;\n             break;\n         default :\n             break;\n    }\n}"
    ],
    "lineNumber": 303,
    "type": {
      "nullable": null,
      "types": [
        "DailyStatisticsType"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 73,
    "kind": "typedef",
    "name": "BookAction",
    "memberof": "src/index.js~v9",
    "static": true,
    "longname": "src/index.js~v9.BookAction",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "NotSet",
        "description": "255"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "New",
        "description": "0"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Change",
        "description": "1"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Delete",
        "description": "2"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "DeleteThru",
        "description": "3"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "DeleteFrom",
        "description": "4"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Overlay",
        "description": "5"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Replace",
        "description": "6"
      }
    ],
    "type": {
      "types": [
        "enumeration"
      ],
      "optional": false,
      "name": "BookAction"
    }
  },
  {
    "__docId__": 74,
    "kind": "member",
    "name": "BookAction",
    "memberof": "src/index.js~v9",
    "static": false,
    "longname": "src/index.js~v9#BookAction",
    "access": "public",
    "description": "A {@link v9}․{@link BookAction} {@link enumeration} that contains each of the different values that may be returned from:</br>\n - pEvent.orderBook.action\n - pEvent.bookLevel.action",
    "examples": [
      "onEvent(pSymbol, pEvent, pRealTime) {\n    switch (pEvent.header.unionID) {\n   case v9.UnionID.OrderBook:\n                 var act = pEvent.orderBook.action;\n             break;\n         default :\n             break;\n    }\n}"
    ],
    "lineNumber": 337,
    "type": {
      "nullable": null,
      "types": [
        "BookAction"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 75,
    "kind": "typedef",
    "name": "SessionStatisticsType",
    "memberof": "src/index.js~v9",
    "static": true,
    "longname": "src/index.js~v9.SessionStatisticsType",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "NotSet",
        "description": "127"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "OpenPrice",
        "description": "0"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "HighTrade",
        "description": "1"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "LowTrade",
        "description": "2"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "LastTrade",
        "description": "3"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "HighestBid",
        "description": "4"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "LowestAsk",
        "description": "5"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ClosePrice",
        "description": "6"
      }
    ],
    "type": {
      "types": [
        "enumeration"
      ],
      "optional": false,
      "name": "SessionStatisticsType"
    }
  },
  {
    "__docId__": 76,
    "kind": "member",
    "name": "SessionStatisticsType",
    "memberof": "src/index.js~v9",
    "static": false,
    "longname": "src/index.js~v9#SessionStatisticsType",
    "access": "public",
    "description": "A {@link v9}․{@link SessionStatisticsType} {@link enumeration} that contains each of the different values that may be returned from:</br>\n - pEvent.sessionStatistics.type",
    "examples": [
      "onEvent(pSymbol, pEvent, pRealTime) {\n    switch (pEvent.header.unionID) {\n        case v9.UnionID.SessionStatistics:\n                 var typ = pEvent.sessionStatistics.type;\n             break;\n         default :\n             break;\n    }\n}"
    ],
    "lineNumber": 374,
    "type": {
      "nullable": null,
      "types": [
        "SessionStatisticsType"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 77,
    "kind": "typedef",
    "name": "StateType",
    "memberof": "src/index.js~v9",
    "static": true,
    "longname": "src/index.js~v9.StateType",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "NotSet",
        "description": "255"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "DailyOpenPrice",
        "description": "0"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "IndicativeOpeningPrice",
        "description": "5"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "DailyClosingPrice",
        "description": "10"
      }
    ],
    "type": {
      "types": [
        "enumeration"
      ],
      "optional": false,
      "name": "StateType"
    }
  },
  {
    "__docId__": 78,
    "kind": "member",
    "name": "StateType",
    "memberof": "src/index.js~v9",
    "static": false,
    "longname": "src/index.js~v9#StateType",
    "access": "public",
    "description": "A {@link v9}․{@link StateType} {@link enumeration} that contains each of the different values that may be returned from:</br>\n - pEvent.sessionStatistics.stateType",
    "examples": [
      "onEvent(pSymbol, pEvent, pRealTime) {\n    switch (pEvent.header.unionID) {\n   case v9.UnionID.SessionStatistics:\n                 var stt = pEvent.sessionStatistics.stateType;\n             break;\n         default :\n             break;\n    }\n}"
    ],
    "lineNumber": 407,
    "type": {
      "nullable": null,
      "types": [
        "StateType"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 79,
    "kind": "typedef",
    "name": "PutOrCall",
    "memberof": "src/index.js~v9",
    "static": true,
    "longname": "src/index.js~v9.PutOrCall",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "NotSet",
        "description": "255"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Put",
        "description": "0"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Call",
        "description": "1"
      }
    ],
    "type": {
      "types": [
        "enumeration"
      ],
      "optional": false,
      "name": "PutOrCall"
    }
  },
  {
    "__docId__": 80,
    "kind": "member",
    "name": "PutOrCall",
    "memberof": "src/index.js~v9",
    "static": false,
    "longname": "src/index.js~v9#PutOrCall",
    "access": "public",
    "description": "A {@link v9}․{@link PutOrCall} {@link enumeration} that contains each of the different values that may be returned from:</br>\n - pEvent.PutOrCall.type",
    "examples": [
      "onEvent(pSymbol, pEvent, pRealTime) {\n    // N/A\n}"
    ],
    "lineNumber": 429,
    "type": {
      "nullable": null,
      "types": [
        "PutOrCall"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 81,
    "kind": "typedef",
    "name": "SettleType",
    "memberof": "src/index.js~v9",
    "static": true,
    "longname": "src/index.js~v9.SettleType",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Final",
        "description": "1"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Actual",
        "description": "2"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Rounded",
        "description": "4"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "Intraday",
        "description": "8"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "ReservedBits",
        "description": "16"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "NullValue",
        "description": "128"
      }
    ],
    "type": {
      "types": [
        "enumeration"
      ],
      "optional": false,
      "name": "SettleType"
    }
  },
  {
    "__docId__": 82,
    "kind": "member",
    "name": "SettleType",
    "memberof": "src/index.js~v9",
    "static": false,
    "longname": "src/index.js~v9#SettleType",
    "access": "public",
    "description": "A {@link v9}․{@link SettleType} {@link enumeration} that contains each of the different values that may be returned from:</br>\n - pEvent.dailyStatistics.settleType",
    "examples": [
      "onEvent(pSymbol, pEvent, pRealTime) {\n    switch (pEvent.header.unionID) {\n   case v9.UnionID.DailyStatistics:\n                 var stl = pEvent.dailyStatistics.settleType;\n             break;\n         default :\n             break;\n    }\n}"
    ],
    "lineNumber": 459,
    "type": {
      "nullable": null,
      "types": [
        "SettleType"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 83,
    "kind": "typedef",
    "name": "TransactionType",
    "memberof": "src/index.js~v9",
    "static": true,
    "longname": "src/index.js~v9.TransactionType",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "NotSet",
        "description": "255"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "TransactionStart",
        "description": "0"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "TransactionEnd",
        "description": "1"
      }
    ],
    "type": {
      "types": [
        "enumeration"
      ],
      "optional": false,
      "name": "TransactionType"
    }
  },
  {
    "__docId__": 84,
    "kind": "member",
    "name": "TransactionType",
    "memberof": "src/index.js~v9",
    "static": false,
    "longname": "src/index.js~v9#TransactionType",
    "access": "public",
    "description": "A {@link v9}․{@link TransactionType} {@link enumeration} that contains each of the different values that may be returned from:</br>\n - pEvent.transactionMarker.transactionType",
    "examples": [
      "onEvent(pSymbol, pEvent, pRealTime) {\n    switch (pEvent.header.unionID) {\n   case v9.UnionID.TransactionMarker:\n                 var ttp = pEvent.transactionMarker.transactionType;\n             break;\n         default :\n             break;\n    }\n}"
    ],
    "lineNumber": 489,
    "type": {
      "nullable": null,
      "types": [
        "TransactionType"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 85,
    "kind": "typedef",
    "name": "EventIndicator",
    "memberof": "src/index.js~v9",
    "static": true,
    "longname": "src/index.js~v9.EventIndicator",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "NotSet",
        "description": "0"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "LastOfType",
        "description": "1"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "EndOfEvent",
        "description": "128"
      }
    ],
    "type": {
      "types": [
        "enumeration"
      ],
      "optional": false,
      "name": "EventIndicator"
    }
  },
  {
    "__docId__": 86,
    "kind": "member",
    "name": "EventIndicator",
    "memberof": "src/index.js~v9",
    "static": false,
    "longname": "src/index.js~v9#EventIndicator",
    "access": "public",
    "description": "A {@link v9}․{@link EventIndicator} {@link enumeration} that contains each of the different values that may be returned from:</br>\n - pEvent.header.eventIndicator",
    "examples": [
      "onEvent(pSymbol, pEvent, pRealTime) {\n    switch (pEvent.header.unionID) {\n   case v9.UnionID.EventIndicator:\n                 var ind = pEvent.header.eventIndicator;\n             break;\n         default :\n             break;\n    }\n}"
    ],
    "lineNumber": 516,
    "type": {
      "nullable": null,
      "types": [
        "EventIndicator"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 87,
    "kind": "typedef",
    "name": "InvestigateStatus",
    "memberof": "src/index.js~v9",
    "static": true,
    "longname": "src/index.js~v9.InvestigateStatus",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "NotSet",
        "description": "0"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "UnderInvestigation",
        "description": "1"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "InvestigationStatus",
        "description": "2"
      }
    ],
    "type": {
      "types": [
        "enumeration"
      ],
      "optional": false,
      "name": "InvestigateStatus"
    }
  },
  {
    "__docId__": 88,
    "kind": "member",
    "name": "InvestigateStatus",
    "memberof": "src/index.js~v9",
    "static": false,
    "longname": "src/index.js~v9#InvestigateStatus",
    "access": "public",
    "description": "A {@link v9}․{@link InvestigateStatus} {@link enumeration} that contains each of the different values that may be returned from:</br>\n - N/A",
    "examples": [
      "onEvent(pSymbol, pEvent, pRealTime) {\n   // N/A\n}"
    ],
    "lineNumber": 537,
    "type": {
      "nullable": null,
      "types": [
        "InvestigateStatus"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 89,
    "kind": "class",
    "name": "edit",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~edit",
    "access": "public",
    "export": false,
    "importPath": "evntscript/src/index.js",
    "importStyle": null,
    "description": "Class used for retrieving and referencing user input",
    "lineNumber": 548,
    "interface": false
  },
  {
    "__docId__": 90,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/index.js~edit",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~edit#constructor",
    "access": "public",
    "description": "Used to retrieve user-specified values from the top of the pane (symbol and date correspond to the two default options at the top of a pane)",
    "examples": [
      "// Specific v9 keywords (\"symbol\" and \"date\")\nlet symbol = new v9.edit(\"symbol\").value; //gets the symbol from the default textbox at the top of the pane\nlet date = new v9.edit(\"date\").value; //gets the date from the default textbox at the top of the pane\n\n// Custom user input keywords can be anything else\nlet quantity = new v9.edit(\"QUANTITY\"); //gets the string the user inputs into a custom 'QUANTITY' textbox at the top of the pane\nlet quantity = new v9.edit(\"QUANTITY\").value; //gets the string the user inputs into a custom 'QUANTITY' textbox at the top of the pane\nlet quantity = new v9.edit(\"QUANTITY\").number; //gets the number the user inputs into a custom 'QUANTITY' textbox at the top of the pane"
    ],
    "lineNumber": 563,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "pEditVariable",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 91,
    "kind": "member",
    "name": "fEditType",
    "memberof": "src/index.js~edit",
    "static": false,
    "longname": "src/index.js~edit#fEditType",
    "access": "private",
    "description": "",
    "lineNumber": 568,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 92,
    "kind": "member",
    "name": "fEditName",
    "memberof": "src/index.js~edit",
    "static": false,
    "longname": "src/index.js~edit#fEditName",
    "access": "private",
    "description": "",
    "lineNumber": 572,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "member",
    "name": "fEditEnum",
    "memberof": "src/index.js~edit",
    "static": false,
    "longname": "src/index.js~edit#fEditEnum",
    "access": "private",
    "description": "",
    "lineNumber": 602,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 97,
    "kind": "get",
    "name": "value",
    "memberof": "src/index.js~edit",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~edit#value",
    "access": "public",
    "description": "Returns the user input as a string",
    "lineNumber": 614,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 98,
    "kind": "set",
    "name": "value",
    "memberof": "src/index.js~edit",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~edit#value",
    "access": "public",
    "description": "Sets the user input value to the provided string",
    "lineNumber": 623,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 99,
    "kind": "get",
    "name": "number",
    "memberof": "src/index.js~edit",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~edit#number",
    "access": "public",
    "description": "Returns the user input as a number",
    "lineNumber": 632,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 100,
    "kind": "member",
    "name": "_number",
    "memberof": "src/index.js~edit",
    "static": false,
    "longname": "src/index.js~edit#_number",
    "access": "private",
    "description": null,
    "lineNumber": 635,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 101,
    "kind": "class",
    "name": "feed",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~feed",
    "access": "public",
    "export": false,
    "importPath": "evntscript/src/index.js",
    "importStyle": null,
    "description": "This class' functions should be overridden in each script for handling user actions and symbol events<br>\nWhen finally instantiating your feed, refer to the {@link edit} class for handling all user input",
    "examples": [
      "class MyFeed extends v9.feed {\n    onInit() {\n\t}\n\n\tonOpen(pMeta) {\n\t}\n\n\tonStop() {\n\t}\n\n\tonRender() {\n\t}\n\n\tonEvent(pSymbol,pEvent,pRealTime) {\n\t}\n}\n\n// use\nlet feed = new MyFeed(); //Pulls symbol and date from v9 pane\n// or\nlet feed = new MyFeed('NQ', '2020401'); //Custom symbol and date values can be entered here\n// or\nlet feed = new MyFeed(symbol, date); //Custom symbol and date values can be implemented as variables\n// or even\nlet request = {\n    symbol: new v9.edit('symbol').value, //Pulls symbol from v9 pane (See edit class)\n    startDate: '20200401',\n    endDate: '20200430'\n};\nlet feed = new MyFeed(request); //Pulls symbol from pane with custom start and end dates"
    ],
    "lineNumber": 675,
    "interface": false
  },
  {
    "__docId__": 102,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/index.js~feed",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~feed#constructor",
    "access": "public",
    "description": "Used to provide the symbol and date to the current {@link feed}",
    "lineNumber": 682,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "pSymbol",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "pDate",
        "description": ""
      }
    ]
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "onInit",
    "memberof": "src/index.js~feed",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~feed#onInit",
    "access": "public",
    "description": "Built in feed function that is called when the start button is pressed in order to initialize the chart.",
    "examples": [
      "onInit() {\n    gChart = new v9.lineChart(\"container\"); //gChart must be a global var defined outside of your feed\n}"
    ],
    "lineNumber": 696,
    "abstract": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 104,
    "kind": "method",
    "name": "onDone",
    "memberof": "src/index.js~feed",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~feed#onDone",
    "access": "public",
    "description": "",
    "examples": [
      "onDone() {\n\n}"
    ],
    "lineNumber": 705,
    "abstract": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 105,
    "kind": "typedef",
    "name": "Instrument",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~Instrument",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "activationDate",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "asset",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "completed",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "contractSymbol",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "currency",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "definitionID",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "depthLevel",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "displayFactor",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "displayType",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "displayTypeEx",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "eosInstrumentID",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "exchInstrumentID",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "exchType",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "exchangeCode",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "expireDate",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "firstDataDate",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "firstDefined",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "groupCode",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "impliedDepth",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "instrumentType",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "lastDataDate",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "lastDefined",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "lastExchUpdateTime",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "loadSource",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "marketTypeID",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "maturityDay",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "maturityMonth",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "maturityYear",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "priceDenominator",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "roots",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "settleDenominator",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "tickSize",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "tickValue",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "unitOfMeasure",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "userDefined",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "vxaChannel",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "vxaId",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "Instrument"
    }
  },
  {
    "__docId__": 106,
    "kind": "typedef",
    "name": "Meta",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~Meta",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Instrument[]"
        ],
        "spread": false,
        "optional": false,
        "name": "instruments",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "records",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "restartTime",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "sessionTime",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "status",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "symbol",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "symbolID",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "userID",
        "description": ""
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "Meta"
    }
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "onOpen",
    "memberof": "src/index.js~feed",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~feed#onOpen",
    "access": "public",
    "description": "Built in feed function that is called at the start of each date between the startDate and endDate parameters of a multi-day script.",
    "examples": [
      "onOpen(pMeta) {\n\n}"
    ],
    "lineNumber": 770,
    "params": [
      {
        "nullable": null,
        "types": [
          "Meta"
        ],
        "spread": false,
        "optional": false,
        "name": "pMeta",
        "description": "Object representing json meta information. It currently provides the instrument definitions of the supplied symbol."
      }
    ],
    "abstract": true,
    "return": null
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "onLoad",
    "memberof": "src/index.js~feed",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~feed#onLoad",
    "access": "public",
    "description": "Built in feed function that is called once the script has read every previous event in the symbol Feed.",
    "examples": [
      "onLoad() {\n\n}"
    ],
    "lineNumber": 781,
    "deprecated": true,
    "abstract": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "onRender",
    "memberof": "src/index.js~feed",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~feed#onRender",
    "access": "public",
    "description": "Built in feed function that is called once for each frame that is rendered to the viewport.",
    "examples": [
      "onRender() {\n\n}"
    ],
    "lineNumber": 791,
    "abstract": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 110,
    "kind": "method",
    "name": "onEvent",
    "memberof": "src/index.js~feed",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~feed#onEvent",
    "access": "public",
    "description": "Built in feed function that is called once for each timestamp tracked in your symbol.\n\nThis is where you'll be doing most of your calculations on the specific things you're looking for in your symbol. It allows your script to perform different tasks depending on the current event's conditions.",
    "examples": [
      "onEvent(pSymbol, pEvent, pRealTime) {\n\n}"
    ],
    "lineNumber": 806,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "pSymbol",
        "description": "Name of the current symbol"
      },
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "pEvent",
        "description": "Current event being handled"
      },
      {
        "nullable": null,
        "types": [
          "Boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "pRealTime",
        "description": "Boolean determining whether or not to only handle current events"
      }
    ],
    "abstract": true,
    "return": null
  },
  {
    "__docId__": 111,
    "kind": "method",
    "name": "onStop",
    "memberof": "src/index.js~feed",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~feed#onStop",
    "access": "public",
    "description": "Built in feed function that is called when the stop button is pressed.",
    "examples": [
      "onStop() {\n\n}"
    ],
    "lineNumber": 816,
    "abstract": true,
    "params": [],
    "return": null
  },
  {
    "__docId__": 112,
    "kind": "class",
    "name": "lineChart",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~lineChart",
    "access": "public",
    "export": false,
    "importPath": "evntscript/src/index.js",
    "importStyle": null,
    "description": "Class used for rendering a line chart to the pane that should be called within the {@link onInit} function",
    "examples": [
      "onInit() {\n    gChart = new v9.lineChart(\"container\"); //gChart must be a global var defined outside of your feed\n}"
    ],
    "lineNumber": 826,
    "interface": false
  },
  {
    "__docId__": 113,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/index.js~lineChart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~lineChart#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 828,
    "undocument": true
  },
  {
    "__docId__": 114,
    "kind": "member",
    "name": "fLineEnum",
    "memberof": "src/index.js~lineChart",
    "static": false,
    "longname": "src/index.js~lineChart#fLineEnum",
    "access": "public",
    "description": null,
    "lineNumber": 830,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 115,
    "kind": "method",
    "name": "linePush",
    "memberof": "src/index.js~lineChart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~lineChart#linePush",
    "access": "public",
    "description": null,
    "lineNumber": 833,
    "undocument": true,
    "params": [
      {
        "name": "pItem",
        "types": [
          "*"
        ]
      },
      {
        "name": "pRate",
        "types": [
          "*"
        ]
      },
      {
        "name": "pTime",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 116,
    "kind": "class",
    "name": "cubeChart",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~cubeChart",
    "access": "public",
    "export": false,
    "importPath": "evntscript/src/index.js",
    "importStyle": null,
    "description": "Class used for rendering a cube chart to the pane that should be called within the {@link onInit} function",
    "examples": [
      "onInit() {\n    gChart = new v9.cubeChart(\"container\"); //gChart must be a global var defined outside of your feed\n}"
    ],
    "lineNumber": 846,
    "interface": false
  },
  {
    "__docId__": 117,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/index.js~cubeChart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~cubeChart#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 848,
    "undocument": true
  },
  {
    "__docId__": 118,
    "kind": "member",
    "name": "fCubeEnum",
    "memberof": "src/index.js~cubeChart",
    "static": false,
    "longname": "src/index.js~cubeChart#fCubeEnum",
    "access": "public",
    "description": null,
    "lineNumber": 850,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 119,
    "kind": "method",
    "name": "cubePlus",
    "memberof": "src/index.js~cubeChart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~cubeChart#cubePlus",
    "access": "public",
    "description": null,
    "lineNumber": 853,
    "undocument": true,
    "params": [
      {
        "name": "pItem",
        "types": [
          "*"
        ]
      },
      {
        "name": "pData",
        "types": [
          "*"
        ]
      },
      {
        "name": "pSize",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 120,
    "kind": "method",
    "name": "cubeDele",
    "memberof": "src/index.js~cubeChart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~cubeChart#cubeDele",
    "access": "public",
    "description": null,
    "lineNumber": 858,
    "undocument": true,
    "params": [
      {
        "name": "pItem",
        "types": [
          "*"
        ]
      },
      {
        "name": "pData",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 121,
    "kind": "method",
    "name": "cubeSave",
    "memberof": "src/index.js~cubeChart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~cubeChart#cubeSave",
    "access": "public",
    "description": null,
    "lineNumber": 863,
    "undocument": true,
    "params": [
      {
        "name": "pItem",
        "types": [
          "*"
        ]
      },
      {
        "name": "pData",
        "types": [
          "*"
        ]
      },
      {
        "name": "pSize",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 122,
    "kind": "method",
    "name": "cubeRead",
    "memberof": "src/index.js~cubeChart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~cubeChart#cubeRead",
    "access": "public",
    "description": null,
    "lineNumber": 868,
    "undocument": true,
    "params": [
      {
        "name": "pItem",
        "types": [
          "*"
        ]
      },
      {
        "name": "pData",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "cubeFree",
    "memberof": "src/index.js~cubeChart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~cubeChart#cubeFree",
    "access": "public",
    "description": null,
    "lineNumber": 873,
    "undocument": true,
    "params": [
      {
        "name": "pItem",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "cubePush",
    "memberof": "src/index.js~cubeChart",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~cubeChart#cubePush",
    "access": "public",
    "description": null,
    "lineNumber": 878,
    "undocument": true,
    "params": [
      {
        "name": "pItem",
        "types": [
          "*"
        ]
      },
      {
        "name": "pSave",
        "types": [
          "*"
        ]
      }
    ],
    "return": null
  },
  {
    "__docId__": 125,
    "kind": "class",
    "name": "console",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~console",
    "access": "public",
    "export": false,
    "importPath": "evntscript/src/index.js",
    "importStyle": null,
    "description": "Class used for rendering a v9 console window to the pane that should be called within the {@link onInit} function",
    "examples": [
      "onInit() {\n    gChart = new v9.console(\"container\"); //gChart must be a global var defined outside of your feed\n}"
    ],
    "lineNumber": 891,
    "interface": false
  },
  {
    "__docId__": 126,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/index.js~console",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~console#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 893,
    "undocument": true
  },
  {
    "__docId__": 127,
    "kind": "member",
    "name": "fTalkEnum",
    "memberof": "src/index.js~console",
    "static": false,
    "longname": "src/index.js~console#fTalkEnum",
    "access": "public",
    "description": null,
    "lineNumber": 895,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 128,
    "kind": "method",
    "name": "print",
    "memberof": "src/index.js~console",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~console#print",
    "access": "public",
    "description": "Function that writes a provided string to a new line of the v9 console output",
    "lineNumber": 903,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "pText",
        "description": "String to be written to the v9 console"
      }
    ],
    "return": null
  },
  {
    "__docId__": 129,
    "kind": "class",
    "name": "lineItem",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~lineItem",
    "access": "public",
    "export": false,
    "importPath": "evntscript/src/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 909,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 130,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/index.js~lineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~lineItem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 911,
    "undocument": true
  },
  {
    "__docId__": 131,
    "kind": "member",
    "name": "fCalcEnum",
    "memberof": "src/index.js~lineItem",
    "static": false,
    "longname": "src/index.js~lineItem#fCalcEnum",
    "access": "public",
    "description": null,
    "lineNumber": 915,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 132,
    "kind": "set",
    "name": "lineWidth",
    "memberof": "src/index.js~lineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~lineItem#lineWidth",
    "access": "public",
    "description": "Stroke width in pixels",
    "lineNumber": 927,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 133,
    "kind": "member",
    "name": "_lineWidth",
    "memberof": "src/index.js~lineItem",
    "static": false,
    "longname": "src/index.js~lineItem#_lineWidth",
    "access": "private",
    "description": null,
    "lineNumber": 931,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 134,
    "kind": "set",
    "name": "strokeStyle",
    "memberof": "src/index.js~lineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~lineItem#strokeStyle",
    "access": "public",
    "description": "Stroke color in hexadecimal as a String",
    "lineNumber": 944,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 135,
    "kind": "member",
    "name": "_strokeStyle",
    "memberof": "src/index.js~lineItem",
    "static": false,
    "longname": "src/index.js~lineItem#_strokeStyle",
    "access": "private",
    "description": null,
    "lineNumber": 948,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 136,
    "kind": "set",
    "name": "format",
    "memberof": "src/index.js~lineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~lineItem#format",
    "access": "public",
    "description": "",
    "lineNumber": 961,
    "todo": [
      "figure out what this does"
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 137,
    "kind": "member",
    "name": "_format",
    "memberof": "src/index.js~lineItem",
    "static": false,
    "longname": "src/index.js~lineItem#_format",
    "access": "private",
    "description": null,
    "lineNumber": 965,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 138,
    "kind": "set",
    "name": "textStyle",
    "memberof": "src/index.js~lineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~lineItem#textStyle",
    "access": "public",
    "description": "Text color in hexadecimal as a String",
    "lineNumber": 978,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 139,
    "kind": "member",
    "name": "_textStyle",
    "memberof": "src/index.js~lineItem",
    "static": false,
    "longname": "src/index.js~lineItem#_textStyle",
    "access": "private",
    "description": null,
    "lineNumber": 982,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 140,
    "kind": "set",
    "name": "bodyStyle",
    "memberof": "src/index.js~lineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~lineItem#bodyStyle",
    "access": "public",
    "description": "",
    "lineNumber": 995,
    "todo": [
      "figure out what this does"
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 141,
    "kind": "member",
    "name": "_bodyStyle",
    "memberof": "src/index.js~lineItem",
    "static": false,
    "longname": "src/index.js~lineItem#_bodyStyle",
    "access": "private",
    "description": null,
    "lineNumber": 999,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 142,
    "kind": "set",
    "name": "title",
    "memberof": "src/index.js~lineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~lineItem#title",
    "access": "public",
    "description": "Text corresponding to current line price",
    "lineNumber": 1012,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 143,
    "kind": "member",
    "name": "_title",
    "memberof": "src/index.js~lineItem",
    "static": false,
    "longname": "src/index.js~lineItem#_title",
    "access": "private",
    "description": null,
    "lineNumber": 1016,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 144,
    "kind": "set",
    "name": "name",
    "memberof": "src/index.js~lineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~lineItem#name",
    "access": "public",
    "description": "",
    "lineNumber": 1029,
    "todo": [
      "figure out what this does"
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 145,
    "kind": "member",
    "name": "_name",
    "memberof": "src/index.js~lineItem",
    "static": false,
    "longname": "src/index.js~lineItem#_name",
    "access": "private",
    "description": null,
    "lineNumber": 1033,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 146,
    "kind": "get",
    "name": "lineWidth",
    "memberof": "src/index.js~lineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~lineItem#lineWidth",
    "access": "public",
    "description": "Stroke width in pixels",
    "lineNumber": 1046,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 147,
    "kind": "get",
    "name": "strokeStyle",
    "memberof": "src/index.js~lineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~lineItem#strokeStyle",
    "access": "public",
    "description": "Stroke color in hexadecimal as a String",
    "lineNumber": 1056,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 148,
    "kind": "get",
    "name": "textStyle",
    "memberof": "src/index.js~lineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~lineItem#textStyle",
    "access": "public",
    "description": "Text color in hexadecimal as a String",
    "lineNumber": 1066,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 149,
    "kind": "get",
    "name": "eventStyle",
    "memberof": "src/index.js~lineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~lineItem#eventStyle",
    "access": "public",
    "description": "",
    "lineNumber": 1076,
    "todo": [
      "figure out what this does"
    ],
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 150,
    "kind": "get",
    "name": "title",
    "memberof": "src/index.js~lineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~lineItem#title",
    "access": "public",
    "description": "The line item's title that appears in the top-left corner of the pane",
    "lineNumber": 1086,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 151,
    "kind": "get",
    "name": "format",
    "memberof": "src/index.js~lineItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~lineItem#format",
    "access": "public",
    "description": "",
    "lineNumber": 1096,
    "todo": [
      "figure out what this does"
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 152,
    "kind": "class",
    "name": "cubeItem",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~cubeItem",
    "access": "public",
    "export": false,
    "importPath": "evntscript/src/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 1102,
    "undocument": true,
    "interface": false
  },
  {
    "__docId__": 153,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/index.js~cubeItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~cubeItem#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 1104,
    "undocument": true
  },
  {
    "__docId__": 154,
    "kind": "member",
    "name": "fCalcEnum",
    "memberof": "src/index.js~cubeItem",
    "static": false,
    "longname": "src/index.js~cubeItem#fCalcEnum",
    "access": "public",
    "description": null,
    "lineNumber": 1108,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 155,
    "kind": "member",
    "name": "fCubeMaps",
    "memberof": "src/index.js~cubeItem",
    "static": false,
    "longname": "src/index.js~cubeItem#fCubeMaps",
    "access": "public",
    "description": null,
    "lineNumber": 1109,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 156,
    "kind": "set",
    "name": "lineWidth",
    "memberof": "src/index.js~cubeItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~cubeItem#lineWidth",
    "access": "public",
    "description": "Stroke width in pixels",
    "lineNumber": 1121,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 157,
    "kind": "member",
    "name": "_lineWidth",
    "memberof": "src/index.js~cubeItem",
    "static": false,
    "longname": "src/index.js~cubeItem#_lineWidth",
    "access": "private",
    "description": null,
    "lineNumber": 1125,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 158,
    "kind": "set",
    "name": "strokeStyle",
    "memberof": "src/index.js~cubeItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~cubeItem#strokeStyle",
    "access": "public",
    "description": "Stroke color in hexadecimal as a String",
    "lineNumber": 1138,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 159,
    "kind": "member",
    "name": "_strokeStyle",
    "memberof": "src/index.js~cubeItem",
    "static": false,
    "longname": "src/index.js~cubeItem#_strokeStyle",
    "access": "private",
    "description": null,
    "lineNumber": 1142,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 160,
    "kind": "set",
    "name": "format",
    "memberof": "src/index.js~cubeItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~cubeItem#format",
    "access": "public",
    "description": "",
    "lineNumber": 1155,
    "todo": [
      "figure out what this does"
    ],
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 161,
    "kind": "member",
    "name": "_format",
    "memberof": "src/index.js~cubeItem",
    "static": false,
    "longname": "src/index.js~cubeItem#_format",
    "access": "private",
    "description": null,
    "lineNumber": 1159,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 162,
    "kind": "set",
    "name": "textStyle",
    "memberof": "src/index.js~cubeItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~cubeItem#textStyle",
    "access": "public",
    "description": "Text color in hexadecimal as a String",
    "lineNumber": 1172,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 163,
    "kind": "member",
    "name": "_textStyle",
    "memberof": "src/index.js~cubeItem",
    "static": false,
    "longname": "src/index.js~cubeItem#_textStyle",
    "access": "private",
    "description": null,
    "lineNumber": 1176,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 164,
    "kind": "set",
    "name": "bodyStyle",
    "memberof": "src/index.js~cubeItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~cubeItem#bodyStyle",
    "access": "public",
    "description": "",
    "lineNumber": 1189,
    "todo": [
      "figure out what this does"
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 165,
    "kind": "member",
    "name": "_bodyStyle",
    "memberof": "src/index.js~cubeItem",
    "static": false,
    "longname": "src/index.js~cubeItem#_bodyStyle",
    "access": "private",
    "description": null,
    "lineNumber": 1193,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 166,
    "kind": "set",
    "name": "title",
    "memberof": "src/index.js~cubeItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~cubeItem#title",
    "access": "public",
    "description": "Text corresponding to current cube price",
    "lineNumber": 1206,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 167,
    "kind": "member",
    "name": "_title",
    "memberof": "src/index.js~cubeItem",
    "static": false,
    "longname": "src/index.js~cubeItem#_title",
    "access": "private",
    "description": null,
    "lineNumber": 1210,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 168,
    "kind": "set",
    "name": "name",
    "memberof": "src/index.js~cubeItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~cubeItem#name",
    "access": "public",
    "description": "",
    "lineNumber": 1223,
    "todo": [
      "figure out what this does"
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 169,
    "kind": "member",
    "name": "_name",
    "memberof": "src/index.js~cubeItem",
    "static": false,
    "longname": "src/index.js~cubeItem#_name",
    "access": "private",
    "description": null,
    "lineNumber": 1227,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 170,
    "kind": "get",
    "name": "lineWidth",
    "memberof": "src/index.js~cubeItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~cubeItem#lineWidth",
    "access": "public",
    "description": "Stroke width in pixels",
    "lineNumber": 1240,
    "type": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 171,
    "kind": "get",
    "name": "strokeStyle",
    "memberof": "src/index.js~cubeItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~cubeItem#strokeStyle",
    "access": "public",
    "description": "Stroke color in hexadecimal as a String",
    "lineNumber": 1250,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 172,
    "kind": "get",
    "name": "textStyle",
    "memberof": "src/index.js~cubeItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~cubeItem#textStyle",
    "access": "public",
    "description": "Text color in hexadecimal as a String",
    "lineNumber": 1260,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 173,
    "kind": "get",
    "name": "eventStyle",
    "memberof": "src/index.js~cubeItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~cubeItem#eventStyle",
    "access": "public",
    "description": "",
    "lineNumber": 1270,
    "todo": [
      "figure out what this does"
    ],
    "unknown": [
      {
        "tagName": "@readonly",
        "tagValue": ""
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 174,
    "kind": "get",
    "name": "title",
    "memberof": "src/index.js~cubeItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~cubeItem#title",
    "access": "public",
    "description": "The cube item's title that appears in the top-left corner of the pane",
    "lineNumber": 1280,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 175,
    "kind": "get",
    "name": "format",
    "memberof": "src/index.js~cubeItem",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~cubeItem#format",
    "access": "public",
    "description": "",
    "lineNumber": 1290,
    "todo": [
      "figure out what this does"
    ],
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 176,
    "kind": "function",
    "name": "eventToJson",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~eventToJson",
    "access": "public",
    "export": false,
    "importPath": "evntscript/src/index.js",
    "importStyle": null,
    "description": "Returns a JSON Object representing the provided {@link Event}",
    "lineNumber": 1300,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "pEvent",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 177,
    "kind": "function",
    "name": "eventCopy",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~eventCopy",
    "access": "public",
    "export": false,
    "importPath": "evntscript/src/index.js",
    "importStyle": null,
    "description": "Returns a copy of a provided {@link Event}",
    "lineNumber": 1337,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "pEvent",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 178,
    "kind": "function",
    "name": "onerror",
    "memberof": "src/index.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/index.js~onerror",
    "access": "public",
    "export": false,
    "importPath": "evntscript/src/index.js",
    "importStyle": null,
    "description": "Reports errors to the debugging window",
    "lineNumber": 1413,
    "params": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "msg",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "lineNo",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "Number"
        ],
        "spread": false,
        "optional": false,
        "name": "columnNo",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "error",
        "description": ""
      }
    ],
    "return": null
  },
  {
    "__docId__": 179,
    "kind": "class",
    "name": "Event",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~Event",
    "access": "public",
    "export": true,
    "importPath": "evntscript/src/index.js",
    "importStyle": "{Event}",
    "description": "Class used for referencing any individual {@link Event} from the current {@link feed}",
    "lineNumber": 1443,
    "interface": false
  },
  {
    "__docId__": 180,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/index.js~Event",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/index.js~Event#constructor",
    "access": "public",
    "description": null,
    "lineNumber": 1445,
    "undocument": true
  },
  {
    "__docId__": 181,
    "kind": "typedef",
    "name": "Header",
    "memberof": "src/index.js~Event",
    "static": true,
    "longname": "src/index.js~Event.Header",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "unionID",
        "description": "Enumerated value used to find the type of an Event object"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "sequence",
        "description": "The current Event object's session array index"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "time",
        "description": "The exact time of the current Event in nanoseconds as a BigInt"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "timeH",
        "description": "The higher half of the aforementioned time member as a Number"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "timeL",
        "description": "The lower half of the aforementioned time member as a Number"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "milliseconds",
        "description": "The aforementioned time member in milliseconds as a Number"
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "Header"
    }
  },
  {
    "__docId__": 182,
    "kind": "member",
    "name": "header",
    "memberof": "src/index.js~Event",
    "static": false,
    "longname": "src/index.js~Event#header",
    "access": "public",
    "description": "Each Event’s header object provides access to general Event information and is accessed using:\n - <EventName>.header.<memberName>",
    "examples": [
      "onEvent(pSymbol, pEvent, pRealTime) {\n    switch (pEvent.header.unionID) {\n        case v9.UnionID.TradeSummary:\n            var fTime = new Date(pEvent.header.milliseconds).toLocalTimeString(); //Formats the date and time based off of the current Event's time in milliseconds\n            break;\n        default :\n            break;\n    }\n}"
    ],
    "lineNumber": 1471,
    "type": {
      "nullable": null,
      "types": [
        "Header"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 183,
    "kind": "typedef",
    "name": "TradeSummary",
    "memberof": "src/index.js~Event",
    "static": true,
    "longname": "src/index.js~Event.TradeSummary",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "price",
        "description": "The price of the current Event"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "quantity",
        "description": "The total quantity matched for the the current Event"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "matches",
        "description": "The number of upcoming orders that will participate in the current Event"
      },
      {
        "nullable": null,
        "types": [
          "Aggressor"
        ],
        "spread": false,
        "optional": false,
        "name": "aggressor",
        "description": "The aggressor of the trade the current Event is summarizing"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isImplied",
        "description": "Whether or not the trade the current Event is summarizing was implied"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "isSnapshot",
        "description": "Whether or not the current Event is a market summary"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "volume",
        "description": "The accumulated volume of the current session"
      }
    ],
    "type": {
      "types": [
        "enumeration"
      ],
      "optional": false,
      "name": "TradeSummary"
    }
  },
  {
    "__docId__": 184,
    "kind": "member",
    "name": "tradeSummary",
    "memberof": "src/index.js~Event",
    "static": false,
    "longname": "src/index.js~Event#tradeSummary",
    "access": "public",
    "description": "Each tradeSummary Event object is accessed using:\n - <EventName>.header.tradeSummary",
    "lineNumber": 1495,
    "type": {
      "nullable": null,
      "types": [
        "TradeSummary"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 185,
    "kind": "typedef",
    "name": "TradeMatch",
    "memberof": "src/index.js~Event",
    "static": true,
    "longname": "src/index.js~Event.TradeMatch",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "price",
        "description": "The price of the current Event"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "quantity",
        "description": "The total quantity matched for the current Event"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "number",
        "description": "The enumerated value from 0 to number of TradeSummary.matches"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isAggressor",
        "description": "Whether or not the current Event was made by the aggressor of the trade."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "orderID",
        "description": "The identifier for the current Event’s order"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "auxilaryID",
        "description": "The original identifier for the current Event’s order."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "flags",
        "description": "These bits are exchange specific. If you don’t know which exchange this file came from, the exchange for this instrId is located in the Instrument Information message."
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "TradeMatch"
    }
  },
  {
    "__docId__": 186,
    "kind": "member",
    "name": "tradeMatch",
    "memberof": "src/index.js~Event",
    "static": false,
    "longname": "src/index.js~Event#tradeMatch",
    "access": "public",
    "description": "Each tradeMatch Event object is accessed using:\n - <EventName>.header.tradeMatch",
    "lineNumber": 1520,
    "type": {
      "nullable": null,
      "types": [
        "TradeMatch"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 187,
    "kind": "typedef",
    "name": "VolumeUpdate",
    "memberof": "src/index.js~Event",
    "static": true,
    "longname": "src/index.js~Event.VolumeUpdate",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "volume",
        "description": "The total volume for the session including the current Event"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "vwap",
        "description": "An ICE-specific stat metric"
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "VolumeUpdate"
    }
  },
  {
    "__docId__": 188,
    "kind": "member",
    "name": "volumeUpdate",
    "memberof": "src/index.js~Event",
    "static": false,
    "longname": "src/index.js~Event#volumeUpdate",
    "access": "public",
    "description": "Each volumeUpdate Event object is accessed using:\n - <EventName>.header.volumeUpdate",
    "lineNumber": 1540,
    "type": {
      "nullable": null,
      "types": [
        "VolumeUpdate"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 189,
    "kind": "typedef",
    "name": "BookLevel",
    "memberof": "src/index.js~Event",
    "static": true,
    "longname": "src/index.js~Event.BookLevel",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "price",
        "description": "The price of the current Event"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "quantity",
        "description": "The total quantity matched for the the current Event"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "orders",
        "description": "The number of orders that participated at the current Event’s price level"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "impliedQuantity",
        "description": "The total implied quantity at the current event’s price level"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "impliedOrders",
        "description": "The total number of implied orders at the current event’s price level"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "level",
        "description": "The price level at which the event occurred"
      },
      {
        "nullable": null,
        "types": [
          "BookAction"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "The book action of the order corresponding to the current event"
      },
      {
        "nullable": null,
        "types": [
          "BookType"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "The type of the current Event"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isEndEvent",
        "description": "Whether or not the current Event is the last Event of the packet"
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "BookLevel"
    }
  },
  {
    "__docId__": 190,
    "kind": "member",
    "name": "bookLevel",
    "memberof": "src/index.js~Event",
    "static": false,
    "longname": "src/index.js~Event#bookLevel",
    "access": "public",
    "description": "Each bookLevel Event object is accessed using:\n - <EventName>.header.bookLevel",
    "lineNumber": 1562,
    "type": {
      "nullable": null,
      "types": [
        "BookLevel"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 191,
    "kind": "typedef",
    "name": "OrderBook",
    "memberof": "src/index.js~Event",
    "static": true,
    "longname": "src/index.js~Event.OrderBook",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "price",
        "description": "The price of the current Event"
      },
      {
        "nullable": null,
        "types": [
          "BookType"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "The type of the current Event"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "quantity",
        "description": "The total quantity matched for the current Event"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "priorityID",
        "description": "The order priority for execution on the current order book : Lower = higher priority"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "auxilaryID",
        "description": "The first OrderID assigned because some exchanges change the orderID : Only ICE and Eurex Exchanges"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "previousID",
        "description": "If an orderID is changed, this is the ID that was just replaced : Eurex"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "orderID",
        "description": "The identifier for the current Event's order"
      },
      {
        "nullable": null,
        "types": [
          "BookAction"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "The book action of the order corresponding to the current event"
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "OrderBook"
    }
  },
  {
    "__docId__": 192,
    "kind": "member",
    "name": "orderBook",
    "memberof": "src/index.js~Event",
    "static": false,
    "longname": "src/index.js~Event#orderBook",
    "access": "public",
    "description": "Each orderBook Event object is accessed using:\n - <EventName>.header.orderBook",
    "lineNumber": 1590,
    "type": {
      "nullable": null,
      "types": [
        "OrderBook"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 193,
    "kind": "typedef",
    "name": "SecurityStatus",
    "memberof": "src/index.js~Event",
    "static": true,
    "longname": "src/index.js~Event.SecurityStatus",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "group",
        "description": "The exchange specific code assigned to a group of related securities, which are concurrently affected by market events"
      },
      {
        "nullable": null,
        "types": [
          "BookType"
        ],
        "spread": false,
        "optional": false,
        "name": "asset",
        "description": "The underlying asset code represented as a String"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "sessionDate",
        "description": "The date of the current Event's trading session"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "The total implied quantity at the current event's price level"
      },
      {
        "nullable": null,
        "types": [
          "HaltReason"
        ],
        "spread": false,
        "optional": false,
        "name": "haltReason",
        "description": "The reason why the market has been halted"
      },
      {
        "nullable": null,
        "types": [
          "SecurityEvent"
        ],
        "spread": false,
        "optional": false,
        "name": "securityEvent",
        "description": "Additional reasoning for the market being halted"
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "SecurityStatus"
    }
  },
  {
    "__docId__": 194,
    "kind": "member",
    "name": "securityStatus",
    "memberof": "src/index.js~Event",
    "static": false,
    "longname": "src/index.js~Event#securityStatus",
    "access": "public",
    "description": "Each securityStatus Event object is accessed using:\n - <EventName>.header.securityStatus",
    "lineNumber": 1615,
    "type": {
      "nullable": null,
      "types": [
        "SecurityStatus"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 195,
    "kind": "typedef",
    "name": "DailyStatistics",
    "memberof": "src/index.js~Event",
    "static": true,
    "longname": "src/index.js~Event.DailyStatistics",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "price",
        "description": "The price of the current Event"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "instrumentID",
        "description": "The unique instrument identifier for the current exchange"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "impliedQuantity",
        "description": "The total number of Events in the current session : Only applies to OpenInterest type"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "impliedOrders",
        "description": "The total number of implied orders at the current event's price level"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "level",
        "description": "The price level at which the event occurred"
      },
      {
        "nullable": null,
        "types": [
          "BookAction"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "The book action of the order corresponding to the current event"
      },
      {
        "nullable": null,
        "types": [
          "DailyStatisticsType"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "The type of the current Event"
      },
      {
        "nullable": null,
        "types": [
          "SettleType"
        ],
        "spread": false,
        "optional": false,
        "name": "settleType",
        "description": "The settlement type of the current Event"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": false,
        "name": "isEndEvent",
        "description": "Whether or not the current Event is the last Event of the packet"
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "DailyStatistics"
    }
  },
  {
    "__docId__": 196,
    "kind": "member",
    "name": "dailyStatistics",
    "memberof": "src/index.js~Event",
    "static": false,
    "longname": "src/index.js~Event#dailyStatistics",
    "access": "public",
    "description": "Each dailyStatistics Event object is accessed using:\n - <EventName>.header.dailyStatistics",
    "lineNumber": 1641,
    "type": {
      "nullable": null,
      "types": [
        "DailyStatistics"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 197,
    "kind": "typedef",
    "name": "SessionStatistics",
    "memberof": "src/index.js~Event",
    "static": true,
    "longname": "src/index.js~Event.SessionStatistics",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "price",
        "description": "The price of the current Event"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "instrumentID",
        "description": "The unique instrument identifier for the current exchange"
      },
      {
        "nullable": null,
        "types": [
          "StateType"
        ],
        "spread": false,
        "optional": false,
        "name": "stateType",
        "description": "The OpeningPrice type of the current Event"
      },
      {
        "nullable": null,
        "types": [
          "BookAction"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": "The book action of the order corresponding to the current event"
      },
      {
        "nullable": null,
        "types": [
          "SessionStatisticsType"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "The type of the current Event"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "size",
        "description": "The total number of Events in the current session"
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "SessionStatistics"
    }
  },
  {
    "__docId__": 198,
    "kind": "member",
    "name": "sessionStatistics",
    "memberof": "src/index.js~Event",
    "static": false,
    "longname": "src/index.js~Event#sessionStatistics",
    "access": "public",
    "description": "Each sessionStatistics Event object is accessed using:\n - <EventName>.header.sessionStatistics",
    "lineNumber": 1668,
    "type": {
      "nullable": null,
      "types": [
        "SessionStatistics"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 199,
    "kind": "typedef",
    "name": "LimitsBanding",
    "memberof": "src/index.js~Event",
    "static": true,
    "longname": "src/index.js~Event.LimitsBanding",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "highLimit",
        "description": "The lowest price level the contract can trade in this session"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "lowLimit",
        "description": "The highest price level the contract can trade in this session"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "maxVariation",
        "description": "The maximum tradeable range for this session"
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "LimitsBanding"
    }
  },
  {
    "__docId__": 200,
    "kind": "member",
    "name": "limitsBanding",
    "memberof": "src/index.js~Event",
    "static": false,
    "longname": "src/index.js~Event#limitsBanding",
    "access": "public",
    "description": "Each limitsBanding Event object is accessed using:\n - <EventName>.header.limitsBanding",
    "lineNumber": 1688,
    "type": {
      "nullable": null,
      "types": [
        "LimitsBanding"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 201,
    "kind": "typedef",
    "name": "ChannelReset",
    "memberof": "src/index.js~Event",
    "static": true,
    "longname": "src/index.js~Event.ChannelReset",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "BookType"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "The type of the current Event"
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "ChannelReset"
    }
  },
  {
    "__docId__": 202,
    "kind": "member",
    "name": "channelReset",
    "memberof": "src/index.js~Event",
    "static": false,
    "longname": "src/index.js~Event#channelReset",
    "access": "public",
    "description": "Each channelReset Event object is accessed using:\n - <EventName>.header.channelReset",
    "lineNumber": 1703,
    "type": {
      "nullable": null,
      "types": [
        "ChannelReset"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 203,
    "kind": "typedef",
    "name": "TransactionMarker",
    "memberof": "src/index.js~Event",
    "static": true,
    "longname": "src/index.js~Event.TransactionMarker",
    "access": "public",
    "description": "",
    "properties": [
      {
        "nullable": null,
        "types": [
          "TransactionType"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "The type of the current Event"
      }
    ],
    "type": {
      "types": [
        "object"
      ],
      "optional": false,
      "name": "TransactionMarker"
    }
  },
  {
    "__docId__": 204,
    "kind": "member",
    "name": "transactionMarker",
    "memberof": "src/index.js~Event",
    "static": false,
    "longname": "src/index.js~Event#transactionMarker",
    "access": "public",
    "description": "Each transactionMarker Event object is accessed using:\n - <EventName>.header.transactionMarker",
    "lineNumber": 1717,
    "type": {
      "nullable": null,
      "types": [
        "TransactionMarker"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "kind": "index",
    "content": "# Vertex Analytics Documentation\n\nVertex Analytics' v9 JavaScript API\n\n# License\n\n\"You're under no obligation to choose a license. However, without a license, the default copyright laws apply, meaning that you retain all rights to your source code and no one may reproduce, distribute, or create derivative works from your work.\" ([GitHub Help](\"https://help.github.com/en/github/creating-cloning-and-archiving-repositories/licensing-a-repository\"))\n\nDocumentation Library Used: [ESDoc](\"https://esdoc.org/manual/usage.html\")\n\n# Authors\n- Blake Boris\n- David Salvador\n- William Leiby\n",
    "longname": "/mnt/c/Users/Blake Reset/source/repos/PlGGS/docs/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"evntscript\",\n  \"version\": \"1.0.0\",\n  \"description\": \"Documentation for Vertex Analytics' v9 Javascript API\",\n  \"author\": \"PlGGS\",\n  \"homepage\": \"https://docs.vertex-analytics.com\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/vertex-analytics/docs\"\n  },\n  \"dependencies\": {\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-integrate-manual-plugin\": \"^1.0.0\",\n    \"esdoc-publish-html-plugin\": \"^1.1.2\",\n    \"esdoc-standard-plugin\": \"^1.0.0\"\n  },\n  \"devDependencies\": {\n    \"esdoc-brand-plugin\": \"^1.0.1\",\n    \"esdoc-custom-theme\": \"^1.4.2\",\n    \"esdoc-inject-style-plugin\": \"^1.0.0\"\n  }\n}\n",
    "longname": "/mnt/c/Users/Blake Reset/source/repos/PlGGS/docs/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "globalIndex": true,
    "content": "<img src=\"manual/asset/vertex-logo-web-dark.png\" alt=\"logo\" width=\"36%\"/>\n# Vertex Analytics | v9 API\n\nThe Vertex Analytics v9 API allows for easy understanding, calculating, and tracking of futures symbols with nanosecond precision and same-day transaction settlement using v9 at https://v9.vertex-analytics.com.\n\nA PDF documenting major v9 type definitions can be found [here](https://vertex-analytics.com/documentation/Data_Reference.pdf).\n\n### Contact\n\nIf you come across any major issue/bugs, please let us know by creating an issue at this repository's [issues page](https://github.com/vertex-analytics/docs/issues).\n\nAdditionally if the issue is pertinent or there is something that you think we could improve about this documentation, please send us an email at [support@vertex-analytics.com](mailto:support@vertex-analytics.com).\n\n##### Documentation by [Blake Boris](https://blakeboris.com), [William Leiby](https://williamleiby.com), and David Salvador\n",
    "longname": "/mnt/c/Users/Blake Reset/source/repos/PlGGS/docs/src/index.md",
    "name": "./src/index.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualAsset",
    "longname": "/mnt/c/Users/Blake Reset/source/repos/PlGGS/docs/src/manual/asset",
    "name": "./src/manual/asset",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/mnt/c/Users/Blake Reset/source/repos/PlGGS/docs/src/manual/manual.md",
    "name": "./src/manual/manual.md",
    "content": "# API Manual\r\n\r\nv9 is an analytical product for tracking past and current futures contracts. It allows you to programmatically perform actions based on\r\nincoming Chicago Mercantile Exchange (CME) WebSocket event data with nanosecond precision and same-day transaction settlement (T-0).\r\n\r\n## Accessing v9\r\n\r\nThe latest build of v9 may be accessed at [v9.vertex-analytics.com](https://v9.vertex-analytics.com).\r\n\r\n## v9 Editor\r\n\r\nThe v9 Editor is where programmers can write custom algorithms in order to build out individual data visualization solutions.\r\n\r\nEach algorithm's script, located on the lefthand side, corresponds to a data visualization solution located on the righthand side.\r\n\r\n<img src=\"asset/explorer-top-new.png\">\r\n\r\nInitially, you must click the \"new script\" button, shown above, in order to access all\r\nof the different sections of the v9 Editor.\r\n\r\n### Sections (Editor)\r\n\r\n#### Top-Bar (Editor)\r\n\r\nThe top-bar houses four navigation buttons to the right that each take you to different pages of v9.\r\n\r\n|                                          | Top-Bar Buttons                   |\r\n| ---------------------------------------- | --------------------------------- |\r\n| <img src=\"asset/v9-top-dashboard.png\">   | Navigates to the v9 Dashboard     |\r\n| <img src=\"asset/v9-top-data-center.png\"> | Navigates to the v9 Data Center   |\r\n| <img src=\"asset/v9-top-help.png\">        | Navigates to the v9 Documentation |\r\n| <img src=\"asset/v9-top-sign-out.png\">    | Navigates to the v9 Log In Page   |\r\n\r\n#### Left-Bar (Editor)\r\n\r\nThe bar on the left-hand side of the v9 Editor contains options for showing and hiding\r\ndifferent sections of v9.\r\n\r\n|                                                  | Left-Bar Top Buttons           |\r\n| ------------------------------------------------ | ------------------------------ |\r\n| <img src=\"asset/v9-left-explorer-button.png\">    | Shows / hides the Explorer     |\r\n| <img src=\"asset/v9-left-text-editor-button.png\"> | Shows / hides the Text Editor  |\r\n| <img src=\"asset/v9-left-pane-button.png\">        | Shows / hides the Pane         |\r\n| <img src=\"asset/v9-left-debug-button.png\">       | Shows / hides the Debug Output |\r\n\r\n|                                                | Left-Bar Bottom Buttons                     |\r\n| ---------------------------------------------- | ------------------------------------------- |\r\n| <img src=\"asset/v9-left-dark-theme.png\">       | Changes the v9 Editor to a dark theme       |\r\n| <img src=\"asset/v9-left-light-theme.png\">      | Changes the Text Editor to a light theme    |\r\n| <img src=\"asset/v9-left-dark-blue-theme.png\">  | Changes the v9 Editor to a dark blue theme  |\r\n| <img src=\"asset/v9-left-light-blue-theme.png\"> | Changes the v9 Editor to a light blue theme |\r\n\r\n#### Explorer (Editor)\r\n\r\nThe explorer houses all of the user's scripts and Vertex Analytics sample scripts.\r\n\r\n<img src=\"asset/v9-explorer.png\" width=\"32.5%\" height=\"32.5%\">\r\n\r\n- Top buttons\r\n\r\nThese buttons correspond to different actions that may be performed on files\r\nwithin the explorer.\r\n\r\n|                                           | Top Explorer Buttons                              |\r\n| ----------------------------------------- | ------------------------------------------------- |\r\n| <img src=\"asset/explorer-top-new.png\">    | Adds a new base script                            |\r\n| <img src=\"asset/explorer-top-import.png\"> | Opens a window that allows for importing a script |\r\n| <img src=\"asset/explorer-top-save.png\">   | Downloads the current script                      |\r\n| <img src=\"asset/explorer-top-delete.png\"> | Deletes the current script                        |\r\n\r\n- User scripts\r\n\r\n<img src=\"asset/explorer-scripts-dropdown.png\">\r\n\r\nThe scripts dropdown, pictured above, houses each and every one of the user's scripts.\r\n\r\n- Templates\r\n\r\n<img src=\"asset/explorer-templates-dropdown.png\">\r\n\r\nThe templates dropdown, pictured above, houses sample scripts created by Vertex Analytics staff separated by library.\r\n\r\n#### Text Editor (Editor)\r\n\r\nThis section represents the area to the right of the explorer section where users create and edit HTML files that contains algorithms to visualize different symbol data.\r\n\r\n<img src=\"asset/v9-text-editor.png\" width=\"50%\" height=\"50%\">\r\n\r\n#### Debugging Output (Editor)\r\n\r\nThis section represents the area below the text editor where syntax and runtime errors are logged regarding current the script(s).\r\n\r\n- Chrome's built-in console will handle issues with external libraries.\r\n\r\n<img src=\"asset/v9-debug.png\" width=\"50%\" height=\"50%\">\r\n\r\n#### Pane (Editor)\r\n\r\nThe pane section, to the right of the text editor, is where a data visualization solution appears upon running the current script.\r\nThe user may choose to specify the symbol and date values that the current script should reference here or within their script.\r\n\r\n<img src=\"asset/v9-pane.png\" width=\"50%\" height=\"50%\">\r\n\r\n#### File Architecture (Editor)\r\n\r\nAs part of the file architecture, there are four main parts that make up each file:\r\n\r\n- Library Imports\r\n\r\n  - This section refers to the top of the HTML file where both v9's propritary library and third-party libraries are imported.\r\n\r\n    - Every script imports the v9 backend via:\r\n    \r\n    ```\r\n    <script src=\"https://v9.vertex-analytics.com/_vxaapi-1.0.0/v9.js\"></script>\r\n    ```\r\n\r\n- JavaScript (Extending [v9](../class/src/index.js~v9.html).[feed](../class/src/index.js~feed.html))\r\n\r\n  ```\r\n    <script>\r\n      class CustomFeed extends v9.feed {\r\n        onInit(){}\r\n        onOpen(pMeta){}\r\n        onRender(){}\r\n        onEvent(pSymbol, pEvent, pRealTime){}\r\n        onStop(){}\r\n      }\r\n\r\n      let feed = new CustomFeed();\r\n    </script>\r\n  ```\r\n\r\n  - This section houses all of the data visualization logic that is executed through the v9 API. This includes the class declaration for the v9 event [v9](../class/src/index.js~v9.html).[feed](../class/src/index.js~feed.html), the lifecycle methods associated with a v9 [feed](../class/src/index.js~feed.html), and the instantiation of a [v9](../class/src/index.js~v9.html).[feed](../class/src/index.js~feed.html) object after overriding all of the data visualization logic within the CustomFeed class body.\r\n\r\n    There are five main lifecycle methods associated with each [v9](../class/src/index.js~v9.html).[feed](../class/src/index.js~feed.html). Each lifecycle method executes at a different point in time while the current script is running.\r\n\r\n    - [onInit](../class/src/index.js~feed.html#instance-method-onInit)()\r\n\r\n      ```\r\n      onInit() {\r\n\r\n      }\r\n      ```\r\n\r\n      - This is the first method that is called when a script is run. It should be used to instantiate the chart, because it only runs once.\r\n\r\n    - [onOpen](../class/src/index.js~feed.html#instance-method-onOpen)([pMeta](../typedef/index.html#static-typedef-Meta))\r\n\r\n      ```\r\n      onOpen(pMeta) {\r\n\r\n      }\r\n      ```\r\n\r\n      - This is the second method that is called when a script is run. It only runs once per day.\r\n\r\n      - Parameters\r\n\r\n        - [pMeta](): Contains metadata associated with each symbol ran within the v9 runtime.\r\n\r\n      - This method is called when the pane has initally loaded all previous session events and information from the current symbol.\r\n\r\n    - [onRender](../class/src/index.js~feed.html#instance-method-onRender)()\r\n\r\n      ```\r\n      onRender() {\r\n\r\n      }\r\n      ```\r\n\r\n      - This method is called, at most, 60 times per second once onLoad completes.\r\n\r\n    - [onEvent](../class/src/index.js~feed.html#instance-method-onEvent)([pSymbol](../class/src/index.js~feed.html#instance-method-onEvent), [pEvent](../class/src/index.js~Event.html), [pRealTime](../class/src/index.js~feed.html#instance-method-onEvent))\r\n\r\n      ```\r\n      onEvent(pSymbol, pEvent, pRealTime) {\r\n          switch (pEvent.header.unionID) {\r\n              case v9.UnionID.<Value>:\r\n                  // Do something when pEvent.header.unionID is equal to v9.UnionID.<Value>\r\n                  break;\r\n              default :\r\n                  break;\r\n          }\r\n      }\r\n      ```\r\n\r\n      - This method is called once for every incoming event in relation to the current symbol.\r\n\r\n      <!-- - For feeds with multiple contracts, see pMeta in the onOpen() lifecycle method above. \\*\\*\\* this isn't a feature yet -->\r\n\r\n      - [pEvent](../class/src/index.js~Event.html) is a JavaScript object that holds exchange [Event](../class/src/index.js~Event.html) information. _To determine what type of [Event](../class/src/index.js~Event.html) is currently being handled, a switch statement should be used as shown above._\r\n\r\n      - Parameters\r\n\r\n        - pSymbol: String representing the name of the current symbol.\r\n\r\n        - [pEvent](../class/src/index.js~Event.html): Current event being handled.\r\n        \r\n          - **_When determining the type of the current [Event](../class/src/index.js~Event.html), the user must check whether or not [pEvent](../class/src/index.js~Event.html)'s [header](../class/src/index.js~Event.html#instance-member-header).[unionID](../typedef/index.html#static-typedef-Header) value against [v9](../class/src/index.js~v9.html).[UnionId](../class/src/index.js~v9.html#instance-member-UnionID) enumeration_**\r\n\r\n        - pRealTime: Boolean determining whether or not to only handle current events.\r\n\r\n    - [onStop](../class/src/index.js~feed.html#instance-method-onStop)()\r\n\r\n      ```\r\n      onStop() {\r\n\r\n      }\r\n      ```\r\n\r\n      - This method is called when the script is stopped by the user.\r\n\r\n- CSS Section\r\n\r\n  ```\r\n  <style>\r\n    html, body, #container {\r\n      width: 100%;\r\n      height: 100%;\r\n      margin: 0;\r\n      padding: 0;\r\n    }\r\n  </style>\r\n  ```\r\n\r\n  - This section refers to styling overrides the user makes within their script(s).\r\n\r\n- HTML Section\r\n\r\n  ```\r\n  <body>\r\n    <div id=\"container\"></div>\r\n  </body>\r\n  ```\r\n\r\n  - This section will always contain a div. By default, its ID is \"container\". The script's feed will point to this HTML element's ID by default.\r\n\r\n    - The proper method to reference this HTML element's ID will be different depending on the library being used.\r\n\r\n## v9 Dashboard\r\n\r\nv9's Dashboards are composed of either one or multiple scripts written in the v9 Editor.\r\n\r\n<!-- , and they can easily be exported and shared with other users. -->\r\n\r\nThe v9 Dashboard is where traders can create Dashboards to monitor multiple scripts they created in the v9 Editor at once.\r\n\r\n### Sections (Dashboard)\r\n\r\n#### Top-Bar (Dashboard)\r\n\r\nThe top-bar houses four navigation buttons to the right that each take you to different pages of v9.\r\n\r\n|                                          | Top-Bar Buttons                   |\r\n| ---------------------------------------- | --------------------------------- |\r\n| <img src=\"asset/v9-top-data-center.png\"> | Navigates to the v9 Data Center   |\r\n| <img src=\"asset/v9-top-help.png\">        | Navigates to the v9 Documentation |\r\n\r\n#### Left-Bar (Dashboard)\r\n\r\nThe bar on the left-hand side of the v9 Editor contains options for showing and hiding\r\ndifferent sections of v9.\r\n\r\n|                                               | Left-Bar Top Button        |\r\n| --------------------------------------------- | -------------------------- |\r\n| <img src=\"asset/v9-left-explorer-button.png\"> | Shows / hides the Explorer |\r\n\r\n|                                                | Left-Bar Bottom Buttons                     |\r\n| ---------------------------------------------- | ------------------------------------------- |\r\n| <img src=\"asset/v9-left-dark-theme.png\">       | Changes the v9 Editor to a dark theme       |\r\n| <img src=\"asset/v9-left-light-theme.png\">      | Changes the Text Editor to a light theme    |\r\n| <img src=\"asset/v9-left-dark-blue-theme.png\">  | Changes the v9 Editor to a dark blue theme  |\r\n| <img src=\"asset/v9-left-light-blue-theme.png\"> | Changes the v9 Editor to a light blue theme |\r\n\r\n#### Explorer (Dashboard)\r\n\r\nThe explorer houses all of the user's scripts and Vertex Analytics sample scripts.\r\n\r\n<img src=\"asset/v9-dash-explorer.png\" width=\"32.5%\" height=\"32.5%\">\r\n\r\n- Top Buttons\r\n\r\nThese buttons correspond to different actions that may be performed on files\r\nwithin the explorer.\r\n\r\n|                                           | Top Explorer Buttons          |\r\n| ----------------------------------------- | ----------------------------- |\r\n| <img src=\"asset/explorer-top-new.png\">    | Adds a new base dashboard     |\r\n| <img src=\"asset/explorer-top-delete.png\"> | Deletes the current dashboard |\r\n\r\n- User Dashboards\r\n\r\n<img src=\"asset/v9-dash-dashboard-dropdown.png\">\r\n\r\nThe dashboard dropdown, pictured above, houses each and every one of the user's scripts.\r\n\r\n- User Scripts\r\n\r\n<img src=\"asset/explorer-scripts-dropdown.png\">\r\n\r\nThe scripts dropdown, pictured above, houses user-created scripts from the v9 Editor.\r\n\r\n#### Dashboard (Dashboard)\r\n\r\nThe dashboard section, to the right of the explorer, houses the currently selected dashboard in the explorer.\r\n\r\n<img src=\"asset/v9-dash-dashboard-running.png\" width=\"50%\" height=\"50%\">\r\n\r\nUsers can drag and drop different scripts from their v9 Editor onto different sections of the current dashboard from the explorer.\r\n\r\n<img src=\"asset/v9-dash-dashboard-placing.png\" width=\"50%\" height=\"50%\">\r\n\r\n<img src=\"asset/explorer-top-new.png\">\r\n\r\nInitially, you must click the \"new dashboard\" button, shown above, in order to access all\r\nof the different sections of the v9 Editor.\r\n\r\n## Troubleshooting\r\n\r\nFor certain periods throughout the day, v9 will not be able to run real-time scripts, because the v9 platform makes use of the time in which the exchange is down to process and archive data.\r\nBelow is a chart containing weekly hours of estimated downtime.\r\n\r\n| Monday        | Tuesday       | Wednesday     | Thursday      | Friday  | Saturday | Sunday  |\r\n| ------------- | ------------- | ------------- | ------------- | ------- | :------: | ------- |\r\n| 4:00pm-5:00pm | 4:00pm-5:00pm | 4:00pm-5:00pm | 4:00pm-5:00pm | 4:00pm- |    -     | -5:00pm |\r\n\r\nAlso, please note that the CME closes at 3:15pm to 3:30pm on weekdays.\r\n\r\n## Contact\r\n\r\nIf you come across any major issue/bugs, please let us know by creating an issue at this repository's [issues page](https://github.com/vertex-analytics/docs/issues).\r\n\r\nAdditionally if the issue is pertinent or there is something that you think we could improve about this documentation, please send us an email at [support@vertex-analytics.com](mailto:support@vertex-analytics.com).\r\n",
    "static": true,
    "access": "public"
  }
]